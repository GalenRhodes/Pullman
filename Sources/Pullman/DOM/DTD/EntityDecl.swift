/*===============================================================================================================================================================================*
 *     PROJECT: Pullman
 *    FILENAME: EntityDecl.swift
 *         IDE: AppCode
 *      AUTHOR: Galen Rhodes
 *        DATE: 11/28/21
 *
 * Copyright Â© 2021. All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this
 * permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO
 * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *===============================================================================================================================================================================*/

import Foundation
import CoreFoundation
import Rubicon

public class EntityDecl: ParentNode {
    //@f:0
    public static let predefinedEntities: [String: String] = [ "lt": "<", "gt": ">", "amp": "&", "apos": "'", "quot": "\"" ]

    public override var nodeType:     NodeType { .Entity }
    public override var nodeName:     String   { nsName.qualifiedName }
    public override var localName:    String   { nsName.localName }
    public override var prefix:       String?  { nsName.prefix }
    public override var namespaceURI: String?  { nsName.namespaceURI }

    public          var name:         String   { nsName.qualifiedName }

    private let nsName: NSName
    //@f:1

    init(ownerDocument: Document, qualifiedName: String, namespaceURI: String?, textContent: String? = nil) throws {
        self.nsName = try NSName(qualifiedName: qualifiedName, namespaceURI: namespaceURI)
        super.init(ownerDocument: ownerDocument)
        if let content = textContent { try appendNode(ownerDocument.createTextNode(content: content)) }
    }

    //@f:0
    public static let characterEntities: [String: String] = [
        "Aacute"                          : "\(UnicodeScalar(UInt32(0x000000C1))!)",
        "aacute"                          : "\(UnicodeScalar(UInt32(0x000000E1))!)",
        "Abreve"                          : "\(UnicodeScalar(UInt32(0x00000102))!)",
        "abreve"                          : "\(UnicodeScalar(UInt32(0x00000103))!)",
        "ac"                              : "\(UnicodeScalar(UInt32(0x0000223E))!)",
        "acd"                             : "\(UnicodeScalar(UInt32(0x0000223F))!)",
        "acE"                             : "\(UnicodeScalar(UInt32(0x0000223E))!)\(UnicodeScalar(UInt32(0x00000333))!)",
        "Acirc"                           : "\(UnicodeScalar(UInt32(0x000000C2))!)",
        "acirc"                           : "\(UnicodeScalar(UInt32(0x000000E2))!)",
        "acute"                           : "\(UnicodeScalar(UInt32(0x000000B4))!)",
        "Acy"                             : "\(UnicodeScalar(UInt32(0x00000410))!)",
        "acy"                             : "\(UnicodeScalar(UInt32(0x00000430))!)",
        "AElig"                           : "\(UnicodeScalar(UInt32(0x000000C6))!)",
        "aelig"                           : "\(UnicodeScalar(UInt32(0x000000E6))!)",
        "af"                              : "\(UnicodeScalar(UInt32(0x00002061))!)",
        "Afr"                             : "\(UnicodeScalar(UInt32(0x0001D504))!)",
        "afr"                             : "\(UnicodeScalar(UInt32(0x0001D51E))!)",
        "Agrave"                          : "\(UnicodeScalar(UInt32(0x000000C0))!)",
        "agrave"                          : "\(UnicodeScalar(UInt32(0x000000E0))!)",
        "alefsym"                         : "\(UnicodeScalar(UInt32(0x00002135))!)",
        "aleph"                           : "\(UnicodeScalar(UInt32(0x00002135))!)",
        "Alpha"                           : "\(UnicodeScalar(UInt32(0x00000391))!)",
        "alpha"                           : "\(UnicodeScalar(UInt32(0x000003B1))!)",
        "Amacr"                           : "\(UnicodeScalar(UInt32(0x00000100))!)",
        "amacr"                           : "\(UnicodeScalar(UInt32(0x00000101))!)",
        "amalg"                           : "\(UnicodeScalar(UInt32(0x00002A3F))!)",
        "amp"                             : "\(UnicodeScalar(UInt32(0x00000026))!)",
        "AMP"                             : "\(UnicodeScalar(UInt32(0x00000026))!)",
        "and"                             : "\(UnicodeScalar(UInt32(0x00002227))!)",
        "And"                             : "\(UnicodeScalar(UInt32(0x00002A53))!)",
        "andand"                          : "\(UnicodeScalar(UInt32(0x00002A55))!)",
        "andd"                            : "\(UnicodeScalar(UInt32(0x00002A5C))!)",
        "andslope"                        : "\(UnicodeScalar(UInt32(0x00002A58))!)",
        "andv"                            : "\(UnicodeScalar(UInt32(0x00002A5A))!)",
        "ang"                             : "\(UnicodeScalar(UInt32(0x00002220))!)",
        "ange"                            : "\(UnicodeScalar(UInt32(0x000029A4))!)",
        "angle"                           : "\(UnicodeScalar(UInt32(0x00002220))!)",
        "angmsd"                          : "\(UnicodeScalar(UInt32(0x00002221))!)",
        "angmsdaa"                        : "\(UnicodeScalar(UInt32(0x000029A8))!)",
        "angmsdab"                        : "\(UnicodeScalar(UInt32(0x000029A9))!)",
        "angmsdac"                        : "\(UnicodeScalar(UInt32(0x000029AA))!)",
        "angmsdad"                        : "\(UnicodeScalar(UInt32(0x000029AB))!)",
        "angmsdae"                        : "\(UnicodeScalar(UInt32(0x000029AC))!)",
        "angmsdaf"                        : "\(UnicodeScalar(UInt32(0x000029AD))!)",
        "angmsdag"                        : "\(UnicodeScalar(UInt32(0x000029AE))!)",
        "angmsdah"                        : "\(UnicodeScalar(UInt32(0x000029AF))!)",
        "angrt"                           : "\(UnicodeScalar(UInt32(0x0000221F))!)",
        "angrtvb"                         : "\(UnicodeScalar(UInt32(0x000022BE))!)",
        "angrtvbd"                        : "\(UnicodeScalar(UInt32(0x0000299D))!)",
        "angsph"                          : "\(UnicodeScalar(UInt32(0x00002222))!)",
        "angst"                           : "\(UnicodeScalar(UInt32(0x000000C5))!)",
        "angzarr"                         : "\(UnicodeScalar(UInt32(0x0000237C))!)",
        "Aogon"                           : "\(UnicodeScalar(UInt32(0x00000104))!)",
        "aogon"                           : "\(UnicodeScalar(UInt32(0x00000105))!)",
        "Aopf"                            : "\(UnicodeScalar(UInt32(0x0001D538))!)",
        "aopf"                            : "\(UnicodeScalar(UInt32(0x0001D552))!)",
        "ap"                              : "\(UnicodeScalar(UInt32(0x00002248))!)",
        "apacir"                          : "\(UnicodeScalar(UInt32(0x00002A6F))!)",
        "ape"                             : "\(UnicodeScalar(UInt32(0x0000224A))!)",
        "apE"                             : "\(UnicodeScalar(UInt32(0x00002A70))!)",
        "apid"                            : "\(UnicodeScalar(UInt32(0x0000224B))!)",
        "apos"                            : "\(UnicodeScalar(UInt32(0x00000027))!)",
        "ApplyFunction"                   : "\(UnicodeScalar(UInt32(0x00002061))!)",
        "approx"                          : "\(UnicodeScalar(UInt32(0x00002248))!)",
        "approxeq"                        : "\(UnicodeScalar(UInt32(0x0000224A))!)",
        "Aring"                           : "\(UnicodeScalar(UInt32(0x000000C5))!)",
        "aring"                           : "\(UnicodeScalar(UInt32(0x000000E5))!)",
        "Ascr"                            : "\(UnicodeScalar(UInt32(0x0001D49C))!)",
        "ascr"                            : "\(UnicodeScalar(UInt32(0x0001D4B6))!)",
        "Assign"                          : "\(UnicodeScalar(UInt32(0x00002254))!)",
        "ast"                             : "\(UnicodeScalar(UInt32(0x0000002A))!)",
        "asymp"                           : "\(UnicodeScalar(UInt32(0x00002248))!)",
        "asympeq"                         : "\(UnicodeScalar(UInt32(0x0000224D))!)",
        "Atilde"                          : "\(UnicodeScalar(UInt32(0x000000C3))!)",
        "atilde"                          : "\(UnicodeScalar(UInt32(0x000000E3))!)",
        "Auml"                            : "\(UnicodeScalar(UInt32(0x000000C4))!)",
        "auml"                            : "\(UnicodeScalar(UInt32(0x000000E4))!)",
        "awconint"                        : "\(UnicodeScalar(UInt32(0x00002233))!)",
        "awint"                           : "\(UnicodeScalar(UInt32(0x00002A11))!)",
        "backcong"                        : "\(UnicodeScalar(UInt32(0x0000224C))!)",
        "backepsilon"                     : "\(UnicodeScalar(UInt32(0x000003F6))!)",
        "backprime"                       : "\(UnicodeScalar(UInt32(0x00002035))!)",
        "backsim"                         : "\(UnicodeScalar(UInt32(0x0000223D))!)",
        "backsimeq"                       : "\(UnicodeScalar(UInt32(0x000022CD))!)",
        "Backslash"                       : "\(UnicodeScalar(UInt32(0x00002216))!)",
        "Barv"                            : "\(UnicodeScalar(UInt32(0x00002AE7))!)",
        "barvee"                          : "\(UnicodeScalar(UInt32(0x000022BD))!)",
        "barwed"                          : "\(UnicodeScalar(UInt32(0x00002305))!)",
        "Barwed"                          : "\(UnicodeScalar(UInt32(0x00002306))!)",
        "barwedge"                        : "\(UnicodeScalar(UInt32(0x00002305))!)",
        "bbrk"                            : "\(UnicodeScalar(UInt32(0x000023B5))!)",
        "bbrktbrk"                        : "\(UnicodeScalar(UInt32(0x000023B6))!)",
        "bcong"                           : "\(UnicodeScalar(UInt32(0x0000224C))!)",
        "Bcy"                             : "\(UnicodeScalar(UInt32(0x00000411))!)",
        "bcy"                             : "\(UnicodeScalar(UInt32(0x00000431))!)",
        "bdquo"                           : "\(UnicodeScalar(UInt32(0x0000201E))!)",
        "becaus"                          : "\(UnicodeScalar(UInt32(0x00002235))!)",
        "because"                         : "\(UnicodeScalar(UInt32(0x00002235))!)",
        "Because"                         : "\(UnicodeScalar(UInt32(0x00002235))!)",
        "bemptyv"                         : "\(UnicodeScalar(UInt32(0x000029B0))!)",
        "bepsi"                           : "\(UnicodeScalar(UInt32(0x000003F6))!)",
        "bernou"                          : "\(UnicodeScalar(UInt32(0x0000212C))!)",
        "Bernoullis"                      : "\(UnicodeScalar(UInt32(0x0000212C))!)",
        "Beta"                            : "\(UnicodeScalar(UInt32(0x00000392))!)",
        "beta"                            : "\(UnicodeScalar(UInt32(0x000003B2))!)",
        "beth"                            : "\(UnicodeScalar(UInt32(0x00002136))!)",
        "between"                         : "\(UnicodeScalar(UInt32(0x0000226C))!)",
        "Bfr"                             : "\(UnicodeScalar(UInt32(0x0001D505))!)",
        "bfr"                             : "\(UnicodeScalar(UInt32(0x0001D51F))!)",
        "bigcap"                          : "\(UnicodeScalar(UInt32(0x000022C2))!)",
        "bigcirc"                         : "\(UnicodeScalar(UInt32(0x000025EF))!)",
        "bigcup"                          : "\(UnicodeScalar(UInt32(0x000022C3))!)",
        "bigodot"                         : "\(UnicodeScalar(UInt32(0x00002A00))!)",
        "bigoplus"                        : "\(UnicodeScalar(UInt32(0x00002A01))!)",
        "bigotimes"                       : "\(UnicodeScalar(UInt32(0x00002A02))!)",
        "bigsqcup"                        : "\(UnicodeScalar(UInt32(0x00002A06))!)",
        "bigstar"                         : "\(UnicodeScalar(UInt32(0x00002605))!)",
        "bigtriangledown"                 : "\(UnicodeScalar(UInt32(0x000025BD))!)",
        "bigtriangleup"                   : "\(UnicodeScalar(UInt32(0x000025B3))!)",
        "biguplus"                        : "\(UnicodeScalar(UInt32(0x00002A04))!)",
        "bigvee"                          : "\(UnicodeScalar(UInt32(0x000022C1))!)",
        "bigwedge"                        : "\(UnicodeScalar(UInt32(0x000022C0))!)",
        "bkarow"                          : "\(UnicodeScalar(UInt32(0x0000290D))!)",
        "blacklozenge"                    : "\(UnicodeScalar(UInt32(0x000029EB))!)",
        "blacksquare"                     : "\(UnicodeScalar(UInt32(0x000025AA))!)",
        "blacktriangle"                   : "\(UnicodeScalar(UInt32(0x000025B4))!)",
        "blacktriangledown"               : "\(UnicodeScalar(UInt32(0x000025BE))!)",
        "blacktriangleleft"               : "\(UnicodeScalar(UInt32(0x000025C2))!)",
        "blacktriangleright"              : "\(UnicodeScalar(UInt32(0x000025B8))!)",
        "blank"                           : "\(UnicodeScalar(UInt32(0x00002423))!)",
        "blk12"                           : "\(UnicodeScalar(UInt32(0x00002592))!)",
        "blk14"                           : "\(UnicodeScalar(UInt32(0x00002591))!)",
        "blk34"                           : "\(UnicodeScalar(UInt32(0x00002593))!)",
        "block"                           : "\(UnicodeScalar(UInt32(0x00002588))!)",
        "bne"                             : "\(UnicodeScalar(UInt32(0x0000003D))!)\(UnicodeScalar(UInt32(0x000020E5))!)",
        "bnequiv"                         : "\(UnicodeScalar(UInt32(0x00002261))!)\(UnicodeScalar(UInt32(0x000020E5))!)",
        "bnot"                            : "\(UnicodeScalar(UInt32(0x00002310))!)",
        "bNot"                            : "\(UnicodeScalar(UInt32(0x00002AED))!)",
        "Bopf"                            : "\(UnicodeScalar(UInt32(0x0001D539))!)",
        "bopf"                            : "\(UnicodeScalar(UInt32(0x0001D553))!)",
        "bot"                             : "\(UnicodeScalar(UInt32(0x000022A5))!)",
        "bottom"                          : "\(UnicodeScalar(UInt32(0x000022A5))!)",
        "bowtie"                          : "\(UnicodeScalar(UInt32(0x000022C8))!)",
        "boxbox"                          : "\(UnicodeScalar(UInt32(0x000029C9))!)",
        "boxdl"                           : "\(UnicodeScalar(UInt32(0x00002510))!)",
        "boxdL"                           : "\(UnicodeScalar(UInt32(0x00002555))!)",
        "boxDl"                           : "\(UnicodeScalar(UInt32(0x00002556))!)",
        "boxDL"                           : "\(UnicodeScalar(UInt32(0x00002557))!)",
        "boxdr"                           : "\(UnicodeScalar(UInt32(0x0000250C))!)",
        "boxdR"                           : "\(UnicodeScalar(UInt32(0x00002552))!)",
        "boxDr"                           : "\(UnicodeScalar(UInt32(0x00002553))!)",
        "boxDR"                           : "\(UnicodeScalar(UInt32(0x00002554))!)",
        "boxh"                            : "\(UnicodeScalar(UInt32(0x00002500))!)",
        "boxH"                            : "\(UnicodeScalar(UInt32(0x00002550))!)",
        "boxhd"                           : "\(UnicodeScalar(UInt32(0x0000252C))!)",
        "boxHd"                           : "\(UnicodeScalar(UInt32(0x00002564))!)",
        "boxhD"                           : "\(UnicodeScalar(UInt32(0x00002565))!)",
        "boxHD"                           : "\(UnicodeScalar(UInt32(0x00002566))!)",
        "boxhu"                           : "\(UnicodeScalar(UInt32(0x00002534))!)",
        "boxHu"                           : "\(UnicodeScalar(UInt32(0x00002567))!)",
        "boxhU"                           : "\(UnicodeScalar(UInt32(0x00002568))!)",
        "boxHU"                           : "\(UnicodeScalar(UInt32(0x00002569))!)",
        "boxminus"                        : "\(UnicodeScalar(UInt32(0x0000229F))!)",
        "boxplus"                         : "\(UnicodeScalar(UInt32(0x0000229E))!)",
        "boxtimes"                        : "\(UnicodeScalar(UInt32(0x000022A0))!)",
        "boxul"                           : "\(UnicodeScalar(UInt32(0x00002518))!)",
        "boxuL"                           : "\(UnicodeScalar(UInt32(0x0000255B))!)",
        "boxUl"                           : "\(UnicodeScalar(UInt32(0x0000255C))!)",
        "boxUL"                           : "\(UnicodeScalar(UInt32(0x0000255D))!)",
        "boxur"                           : "\(UnicodeScalar(UInt32(0x00002514))!)",
        "boxuR"                           : "\(UnicodeScalar(UInt32(0x00002558))!)",
        "boxUr"                           : "\(UnicodeScalar(UInt32(0x00002559))!)",
        "boxUR"                           : "\(UnicodeScalar(UInt32(0x0000255A))!)",
        "boxv"                            : "\(UnicodeScalar(UInt32(0x00002502))!)",
        "boxV"                            : "\(UnicodeScalar(UInt32(0x00002551))!)",
        "boxvh"                           : "\(UnicodeScalar(UInt32(0x0000253C))!)",
        "boxvH"                           : "\(UnicodeScalar(UInt32(0x0000256A))!)",
        "boxVh"                           : "\(UnicodeScalar(UInt32(0x0000256B))!)",
        "boxVH"                           : "\(UnicodeScalar(UInt32(0x0000256C))!)",
        "boxvl"                           : "\(UnicodeScalar(UInt32(0x00002524))!)",
        "boxvL"                           : "\(UnicodeScalar(UInt32(0x00002561))!)",
        "boxVl"                           : "\(UnicodeScalar(UInt32(0x00002562))!)",
        "boxVL"                           : "\(UnicodeScalar(UInt32(0x00002563))!)",
        "boxvr"                           : "\(UnicodeScalar(UInt32(0x0000251C))!)",
        "boxvR"                           : "\(UnicodeScalar(UInt32(0x0000255E))!)",
        "boxVr"                           : "\(UnicodeScalar(UInt32(0x0000255F))!)",
        "boxVR"                           : "\(UnicodeScalar(UInt32(0x00002560))!)",
        "bprime"                          : "\(UnicodeScalar(UInt32(0x00002035))!)",
        "breve"                           : "\(UnicodeScalar(UInt32(0x000002D8))!)",
        "Breve"                           : "\(UnicodeScalar(UInt32(0x000002D8))!)",
        "brvbar"                          : "\(UnicodeScalar(UInt32(0x000000A6))!)",
        "Bscr"                            : "\(UnicodeScalar(UInt32(0x0000212C))!)",
        "bscr"                            : "\(UnicodeScalar(UInt32(0x0001D4B7))!)",
        "bsemi"                           : "\(UnicodeScalar(UInt32(0x0000204F))!)",
        "bsim"                            : "\(UnicodeScalar(UInt32(0x0000223D))!)",
        "bsime"                           : "\(UnicodeScalar(UInt32(0x000022CD))!)",
        "bsol"                            : "\(UnicodeScalar(UInt32(0x0000005C))!)",
        "bsolb"                           : "\(UnicodeScalar(UInt32(0x000029C5))!)",
        "bsolhsub"                        : "\(UnicodeScalar(UInt32(0x000027C8))!)",
        "bull"                            : "\(UnicodeScalar(UInt32(0x00002022))!)",
        "bullet"                          : "\(UnicodeScalar(UInt32(0x00002022))!)",
        "bump"                            : "\(UnicodeScalar(UInt32(0x0000224E))!)",
        "bumpe"                           : "\(UnicodeScalar(UInt32(0x0000224F))!)",
        "bumpE"                           : "\(UnicodeScalar(UInt32(0x00002AAE))!)",
        "Bumpeq"                          : "\(UnicodeScalar(UInt32(0x0000224E))!)",
        "bumpeq"                          : "\(UnicodeScalar(UInt32(0x0000224F))!)",
        "Cacute"                          : "\(UnicodeScalar(UInt32(0x00000106))!)",
        "cacute"                          : "\(UnicodeScalar(UInt32(0x00000107))!)",
        "cap"                             : "\(UnicodeScalar(UInt32(0x00002229))!)",
        "Cap"                             : "\(UnicodeScalar(UInt32(0x000022D2))!)",
        "capand"                          : "\(UnicodeScalar(UInt32(0x00002A44))!)",
        "capbrcup"                        : "\(UnicodeScalar(UInt32(0x00002A49))!)",
        "capcap"                          : "\(UnicodeScalar(UInt32(0x00002A4B))!)",
        "capcup"                          : "\(UnicodeScalar(UInt32(0x00002A47))!)",
        "capdot"                          : "\(UnicodeScalar(UInt32(0x00002A40))!)",
        "CapitalDifferentialD"            : "\(UnicodeScalar(UInt32(0x00002145))!)",
        "caps"                            : "\(UnicodeScalar(UInt32(0x00002229))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "caret"                           : "\(UnicodeScalar(UInt32(0x00002041))!)",
        "caron"                           : "\(UnicodeScalar(UInt32(0x000002C7))!)",
        "Cayleys"                         : "\(UnicodeScalar(UInt32(0x0000212D))!)",
        "ccaps"                           : "\(UnicodeScalar(UInt32(0x00002A4D))!)",
        "Ccaron"                          : "\(UnicodeScalar(UInt32(0x0000010C))!)",
        "ccaron"                          : "\(UnicodeScalar(UInt32(0x0000010D))!)",
        "Ccedil"                          : "\(UnicodeScalar(UInt32(0x000000C7))!)",
        "ccedil"                          : "\(UnicodeScalar(UInt32(0x000000E7))!)",
        "Ccirc"                           : "\(UnicodeScalar(UInt32(0x00000108))!)",
        "ccirc"                           : "\(UnicodeScalar(UInt32(0x00000109))!)",
        "Cconint"                         : "\(UnicodeScalar(UInt32(0x00002230))!)",
        "ccups"                           : "\(UnicodeScalar(UInt32(0x00002A4C))!)",
        "ccupssm"                         : "\(UnicodeScalar(UInt32(0x00002A50))!)",
        "Cdot"                            : "\(UnicodeScalar(UInt32(0x0000010A))!)",
        "cdot"                            : "\(UnicodeScalar(UInt32(0x0000010B))!)",
        "cedil"                           : "\(UnicodeScalar(UInt32(0x000000B8))!)",
        "Cedilla"                         : "\(UnicodeScalar(UInt32(0x000000B8))!)",
        "cemptyv"                         : "\(UnicodeScalar(UInt32(0x000029B2))!)",
        "cent"                            : "\(UnicodeScalar(UInt32(0x000000A2))!)",
        "centerdot"                       : "\(UnicodeScalar(UInt32(0x000000B7))!)",
        "CenterDot"                       : "\(UnicodeScalar(UInt32(0x000000B7))!)",
        "Cfr"                             : "\(UnicodeScalar(UInt32(0x0000212D))!)",
        "cfr"                             : "\(UnicodeScalar(UInt32(0x0001D520))!)",
        "CHcy"                            : "\(UnicodeScalar(UInt32(0x00000427))!)",
        "chcy"                            : "\(UnicodeScalar(UInt32(0x00000447))!)",
        "check"                           : "\(UnicodeScalar(UInt32(0x00002713))!)",
        "checkmark"                       : "\(UnicodeScalar(UInt32(0x00002713))!)",
        "Chi"                             : "\(UnicodeScalar(UInt32(0x000003A7))!)",
        "chi"                             : "\(UnicodeScalar(UInt32(0x000003C7))!)",
        "cir"                             : "\(UnicodeScalar(UInt32(0x000025CB))!)",
        "circ"                            : "\(UnicodeScalar(UInt32(0x000002C6))!)",
        "circeq"                          : "\(UnicodeScalar(UInt32(0x00002257))!)",
        "circlearrowleft"                 : "\(UnicodeScalar(UInt32(0x000021BA))!)",
        "circlearrowright"                : "\(UnicodeScalar(UInt32(0x000021BB))!)",
        "circledast"                      : "\(UnicodeScalar(UInt32(0x0000229B))!)",
        "circledcirc"                     : "\(UnicodeScalar(UInt32(0x0000229A))!)",
        "circleddash"                     : "\(UnicodeScalar(UInt32(0x0000229D))!)",
        "CircleDot"                       : "\(UnicodeScalar(UInt32(0x00002299))!)",
        "circledR"                        : "\(UnicodeScalar(UInt32(0x000000AE))!)",
        "circledS"                        : "\(UnicodeScalar(UInt32(0x000024C8))!)",
        "CircleMinus"                     : "\(UnicodeScalar(UInt32(0x00002296))!)",
        "CirclePlus"                      : "\(UnicodeScalar(UInt32(0x00002295))!)",
        "CircleTimes"                     : "\(UnicodeScalar(UInt32(0x00002297))!)",
        "cire"                            : "\(UnicodeScalar(UInt32(0x00002257))!)",
        "cirE"                            : "\(UnicodeScalar(UInt32(0x000029C3))!)",
        "cirfnint"                        : "\(UnicodeScalar(UInt32(0x00002A10))!)",
        "cirmid"                          : "\(UnicodeScalar(UInt32(0x00002AEF))!)",
        "cirscir"                         : "\(UnicodeScalar(UInt32(0x000029C2))!)",
        "ClockwiseContourIntegral"        : "\(UnicodeScalar(UInt32(0x00002232))!)",
        "CloseCurlyDoubleQuote"           : "\(UnicodeScalar(UInt32(0x0000201D))!)",
        "CloseCurlyQuote"                 : "\(UnicodeScalar(UInt32(0x00002019))!)",
        "clubs"                           : "\(UnicodeScalar(UInt32(0x00002663))!)",
        "clubsuit"                        : "\(UnicodeScalar(UInt32(0x00002663))!)",
        "colon"                           : "\(UnicodeScalar(UInt32(0x0000003A))!)",
        "Colon"                           : "\(UnicodeScalar(UInt32(0x00002237))!)",
        "colone"                          : "\(UnicodeScalar(UInt32(0x00002254))!)",
        "Colone"                          : "\(UnicodeScalar(UInt32(0x00002A74))!)",
        "coloneq"                         : "\(UnicodeScalar(UInt32(0x00002254))!)",
        "comma"                           : "\(UnicodeScalar(UInt32(0x0000002C))!)",
        "commat"                          : "\(UnicodeScalar(UInt32(0x00000040))!)",
        "comp"                            : "\(UnicodeScalar(UInt32(0x00002201))!)",
        "compfn"                          : "\(UnicodeScalar(UInt32(0x00002218))!)",
        "complement"                      : "\(UnicodeScalar(UInt32(0x00002201))!)",
        "complexes"                       : "\(UnicodeScalar(UInt32(0x00002102))!)",
        "cong"                            : "\(UnicodeScalar(UInt32(0x00002245))!)",
        "congdot"                         : "\(UnicodeScalar(UInt32(0x00002A6D))!)",
        "Congruent"                       : "\(UnicodeScalar(UInt32(0x00002261))!)",
        "conint"                          : "\(UnicodeScalar(UInt32(0x0000222E))!)",
        "Conint"                          : "\(UnicodeScalar(UInt32(0x0000222F))!)",
        "ContourIntegral"                 : "\(UnicodeScalar(UInt32(0x0000222E))!)",
        "Copf"                            : "\(UnicodeScalar(UInt32(0x00002102))!)",
        "copf"                            : "\(UnicodeScalar(UInt32(0x0001D554))!)",
        "coprod"                          : "\(UnicodeScalar(UInt32(0x00002210))!)",
        "Coproduct"                       : "\(UnicodeScalar(UInt32(0x00002210))!)",
        "copy"                            : "\(UnicodeScalar(UInt32(0x000000A9))!)",
        "COPY"                            : "\(UnicodeScalar(UInt32(0x000000A9))!)",
        "copysr"                          : "\(UnicodeScalar(UInt32(0x00002117))!)",
        "CounterClockwiseContourIntegral" : "\(UnicodeScalar(UInt32(0x00002233))!)",
        "crarr"                           : "\(UnicodeScalar(UInt32(0x000021B5))!)",
        "cross"                           : "\(UnicodeScalar(UInt32(0x00002717))!)",
        "Cross"                           : "\(UnicodeScalar(UInt32(0x00002A2F))!)",
        "Cscr"                            : "\(UnicodeScalar(UInt32(0x0001D49E))!)",
        "cscr"                            : "\(UnicodeScalar(UInt32(0x0001D4B8))!)",
        "csub"                            : "\(UnicodeScalar(UInt32(0x00002ACF))!)",
        "csube"                           : "\(UnicodeScalar(UInt32(0x00002AD1))!)",
        "csup"                            : "\(UnicodeScalar(UInt32(0x00002AD0))!)",
        "csupe"                           : "\(UnicodeScalar(UInt32(0x00002AD2))!)",
        "ctdot"                           : "\(UnicodeScalar(UInt32(0x000022EF))!)",
        "cudarrl"                         : "\(UnicodeScalar(UInt32(0x00002938))!)",
        "cudarrr"                         : "\(UnicodeScalar(UInt32(0x00002935))!)",
        "cuepr"                           : "\(UnicodeScalar(UInt32(0x000022DE))!)",
        "cuesc"                           : "\(UnicodeScalar(UInt32(0x000022DF))!)",
        "cularr"                          : "\(UnicodeScalar(UInt32(0x000021B6))!)",
        "cularrp"                         : "\(UnicodeScalar(UInt32(0x0000293D))!)",
        "cup"                             : "\(UnicodeScalar(UInt32(0x0000222A))!)",
        "Cup"                             : "\(UnicodeScalar(UInt32(0x000022D3))!)",
        "cupbrcap"                        : "\(UnicodeScalar(UInt32(0x00002A48))!)",
        "CupCap"                          : "\(UnicodeScalar(UInt32(0x0000224D))!)",
        "cupcap"                          : "\(UnicodeScalar(UInt32(0x00002A46))!)",
        "cupcup"                          : "\(UnicodeScalar(UInt32(0x00002A4A))!)",
        "cupdot"                          : "\(UnicodeScalar(UInt32(0x0000228D))!)",
        "cupor"                           : "\(UnicodeScalar(UInt32(0x00002A45))!)",
        "cups"                            : "\(UnicodeScalar(UInt32(0x0000222A))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "curarr"                          : "\(UnicodeScalar(UInt32(0x000021B7))!)",
        "curarrm"                         : "\(UnicodeScalar(UInt32(0x0000293C))!)",
        "curlyeqprec"                     : "\(UnicodeScalar(UInt32(0x000022DE))!)",
        "curlyeqsucc"                     : "\(UnicodeScalar(UInt32(0x000022DF))!)",
        "curlyvee"                        : "\(UnicodeScalar(UInt32(0x000022CE))!)",
        "curlywedge"                      : "\(UnicodeScalar(UInt32(0x000022CF))!)",
        "curren"                          : "\(UnicodeScalar(UInt32(0x000000A4))!)",
        "curvearrowleft"                  : "\(UnicodeScalar(UInt32(0x000021B6))!)",
        "curvearrowright"                 : "\(UnicodeScalar(UInt32(0x000021B7))!)",
        "cuvee"                           : "\(UnicodeScalar(UInt32(0x000022CE))!)",
        "cuwed"                           : "\(UnicodeScalar(UInt32(0x000022CF))!)",
        "cwconint"                        : "\(UnicodeScalar(UInt32(0x00002232))!)",
        "cwint"                           : "\(UnicodeScalar(UInt32(0x00002231))!)",
        "cylcty"                          : "\(UnicodeScalar(UInt32(0x0000232D))!)",
        "dagger"                          : "\(UnicodeScalar(UInt32(0x00002020))!)",
        "Dagger"                          : "\(UnicodeScalar(UInt32(0x00002021))!)",
        "daleth"                          : "\(UnicodeScalar(UInt32(0x00002138))!)",
        "darr"                            : "\(UnicodeScalar(UInt32(0x00002193))!)",
        "Darr"                            : "\(UnicodeScalar(UInt32(0x000021A1))!)",
        "dArr"                            : "\(UnicodeScalar(UInt32(0x000021D3))!)",
        "dash"                            : "\(UnicodeScalar(UInt32(0x00002010))!)",
        "dashv"                           : "\(UnicodeScalar(UInt32(0x000022A3))!)",
        "Dashv"                           : "\(UnicodeScalar(UInt32(0x00002AE4))!)",
        "dbkarow"                         : "\(UnicodeScalar(UInt32(0x0000290F))!)",
        "dblac"                           : "\(UnicodeScalar(UInt32(0x000002DD))!)",
        "Dcaron"                          : "\(UnicodeScalar(UInt32(0x0000010E))!)",
        "dcaron"                          : "\(UnicodeScalar(UInt32(0x0000010F))!)",
        "Dcy"                             : "\(UnicodeScalar(UInt32(0x00000414))!)",
        "dcy"                             : "\(UnicodeScalar(UInt32(0x00000434))!)",
        "DD"                              : "\(UnicodeScalar(UInt32(0x00002145))!)",
        "dd"                              : "\(UnicodeScalar(UInt32(0x00002146))!)",
        "ddagger"                         : "\(UnicodeScalar(UInt32(0x00002021))!)",
        "ddarr"                           : "\(UnicodeScalar(UInt32(0x000021CA))!)",
        "DDotrahd"                        : "\(UnicodeScalar(UInt32(0x00002911))!)",
        "ddotseq"                         : "\(UnicodeScalar(UInt32(0x00002A77))!)",
        "deg"                             : "\(UnicodeScalar(UInt32(0x000000B0))!)",
        "Del"                             : "\(UnicodeScalar(UInt32(0x00002207))!)",
        "Delta"                           : "\(UnicodeScalar(UInt32(0x00000394))!)",
        "delta"                           : "\(UnicodeScalar(UInt32(0x000003B4))!)",
        "demptyv"                         : "\(UnicodeScalar(UInt32(0x000029B1))!)",
        "dfisht"                          : "\(UnicodeScalar(UInt32(0x0000297F))!)",
        "Dfr"                             : "\(UnicodeScalar(UInt32(0x0001D507))!)",
        "dfr"                             : "\(UnicodeScalar(UInt32(0x0001D521))!)",
        "dHar"                            : "\(UnicodeScalar(UInt32(0x00002965))!)",
        "dharl"                           : "\(UnicodeScalar(UInt32(0x000021C3))!)",
        "dharr"                           : "\(UnicodeScalar(UInt32(0x000021C2))!)",
        "DiacriticalAcute"                : "\(UnicodeScalar(UInt32(0x000000B4))!)",
        "DiacriticalDot"                  : "\(UnicodeScalar(UInt32(0x000002D9))!)",
        "DiacriticalDoubleAcute"          : "\(UnicodeScalar(UInt32(0x000002DD))!)",
        "DiacriticalGrave"                : "\(UnicodeScalar(UInt32(0x00000060))!)",
        "DiacriticalTilde"                : "\(UnicodeScalar(UInt32(0x000002DC))!)",
        "diam"                            : "\(UnicodeScalar(UInt32(0x000022C4))!)",
        "diamond"                         : "\(UnicodeScalar(UInt32(0x000022C4))!)",
        "Diamond"                         : "\(UnicodeScalar(UInt32(0x000022C4))!)",
        "diamondsuit"                     : "\(UnicodeScalar(UInt32(0x00002666))!)",
        "diams"                           : "\(UnicodeScalar(UInt32(0x00002666))!)",
        "die"                             : "\(UnicodeScalar(UInt32(0x000000A8))!)",
        "DifferentialD"                   : "\(UnicodeScalar(UInt32(0x00002146))!)",
        "digamma"                         : "\(UnicodeScalar(UInt32(0x000003DD))!)",
        "disin"                           : "\(UnicodeScalar(UInt32(0x000022F2))!)",
        "div"                             : "\(UnicodeScalar(UInt32(0x000000F7))!)",
        "divide"                          : "\(UnicodeScalar(UInt32(0x000000F7))!)",
        "divideontimes"                   : "\(UnicodeScalar(UInt32(0x000022C7))!)",
        "divonx"                          : "\(UnicodeScalar(UInt32(0x000022C7))!)",
        "DJcy"                            : "\(UnicodeScalar(UInt32(0x00000402))!)",
        "djcy"                            : "\(UnicodeScalar(UInt32(0x00000452))!)",
        "dlcorn"                          : "\(UnicodeScalar(UInt32(0x0000231E))!)",
        "dlcrop"                          : "\(UnicodeScalar(UInt32(0x0000230D))!)",
        "dollar"                          : "\(UnicodeScalar(UInt32(0x00000024))!)",
        "Dopf"                            : "\(UnicodeScalar(UInt32(0x0001D53B))!)",
        "dopf"                            : "\(UnicodeScalar(UInt32(0x0001D555))!)",
        "Dot"                             : "\(UnicodeScalar(UInt32(0x000000A8))!)",
        "dot"                             : "\(UnicodeScalar(UInt32(0x000002D9))!)",
        "DotDot"                          : "\(UnicodeScalar(UInt32(0x000020DC))!)",
        "doteq"                           : "\(UnicodeScalar(UInt32(0x00002250))!)",
        "doteqdot"                        : "\(UnicodeScalar(UInt32(0x00002251))!)",
        "DotEqual"                        : "\(UnicodeScalar(UInt32(0x00002250))!)",
        "dotminus"                        : "\(UnicodeScalar(UInt32(0x00002238))!)",
        "dotplus"                         : "\(UnicodeScalar(UInt32(0x00002214))!)",
        "dotsquare"                       : "\(UnicodeScalar(UInt32(0x000022A1))!)",
        "doublebarwedge"                  : "\(UnicodeScalar(UInt32(0x00002306))!)",
        "DoubleContourIntegral"           : "\(UnicodeScalar(UInt32(0x0000222F))!)",
        "DoubleDot"                       : "\(UnicodeScalar(UInt32(0x000000A8))!)",
        "DoubleDownArrow"                 : "\(UnicodeScalar(UInt32(0x000021D3))!)",
        "DoubleLeftArrow"                 : "\(UnicodeScalar(UInt32(0x000021D0))!)",
        "DoubleLeftRightArrow"            : "\(UnicodeScalar(UInt32(0x000021D4))!)",
        "DoubleLeftTee"                   : "\(UnicodeScalar(UInt32(0x00002AE4))!)",
        "DoubleLongLeftArrow"             : "\(UnicodeScalar(UInt32(0x000027F8))!)",
        "DoubleLongLeftRightArrow"        : "\(UnicodeScalar(UInt32(0x000027FA))!)",
        "DoubleLongRightArrow"            : "\(UnicodeScalar(UInt32(0x000027F9))!)",
        "DoubleRightArrow"                : "\(UnicodeScalar(UInt32(0x000021D2))!)",
        "DoubleRightTee"                  : "\(UnicodeScalar(UInt32(0x000022A8))!)",
        "DoubleUpArrow"                   : "\(UnicodeScalar(UInt32(0x000021D1))!)",
        "DoubleUpDownArrow"               : "\(UnicodeScalar(UInt32(0x000021D5))!)",
        "DoubleVerticalBar"               : "\(UnicodeScalar(UInt32(0x00002225))!)",
        "downarrow"                       : "\(UnicodeScalar(UInt32(0x00002193))!)",
        "DownArrow"                       : "\(UnicodeScalar(UInt32(0x00002193))!)",
        "Downarrow"                       : "\(UnicodeScalar(UInt32(0x000021D3))!)",
        "DownArrowBar"                    : "\(UnicodeScalar(UInt32(0x00002913))!)",
        "DownArrowUpArrow"                : "\(UnicodeScalar(UInt32(0x000021F5))!)",
        "DownBreve"                       : "\(UnicodeScalar(UInt32(0x00000311))!)",
        "downdownarrows"                  : "\(UnicodeScalar(UInt32(0x000021CA))!)",
        "downharpoonleft"                 : "\(UnicodeScalar(UInt32(0x000021C3))!)",
        "downharpoonright"                : "\(UnicodeScalar(UInt32(0x000021C2))!)",
        "DownLeftRightVector"             : "\(UnicodeScalar(UInt32(0x00002950))!)",
        "DownLeftTeeVector"               : "\(UnicodeScalar(UInt32(0x0000295E))!)",
        "DownLeftVector"                  : "\(UnicodeScalar(UInt32(0x000021BD))!)",
        "DownLeftVectorBar"               : "\(UnicodeScalar(UInt32(0x00002956))!)",
        "DownRightTeeVector"              : "\(UnicodeScalar(UInt32(0x0000295F))!)",
        "DownRightVector"                 : "\(UnicodeScalar(UInt32(0x000021C1))!)",
        "DownRightVectorBar"              : "\(UnicodeScalar(UInt32(0x00002957))!)",
        "DownTee"                         : "\(UnicodeScalar(UInt32(0x000022A4))!)",
        "DownTeeArrow"                    : "\(UnicodeScalar(UInt32(0x000021A7))!)",
        "drbkarow"                        : "\(UnicodeScalar(UInt32(0x00002910))!)",
        "drcorn"                          : "\(UnicodeScalar(UInt32(0x0000231F))!)",
        "drcrop"                          : "\(UnicodeScalar(UInt32(0x0000230C))!)",
        "Dscr"                            : "\(UnicodeScalar(UInt32(0x0001D49F))!)",
        "dscr"                            : "\(UnicodeScalar(UInt32(0x0001D4B9))!)",
        "DScy"                            : "\(UnicodeScalar(UInt32(0x00000405))!)",
        "dscy"                            : "\(UnicodeScalar(UInt32(0x00000455))!)",
        "dsol"                            : "\(UnicodeScalar(UInt32(0x000029F6))!)",
        "Dstrok"                          : "\(UnicodeScalar(UInt32(0x00000110))!)",
        "dstrok"                          : "\(UnicodeScalar(UInt32(0x00000111))!)",
        "dtdot"                           : "\(UnicodeScalar(UInt32(0x000022F1))!)",
        "dtri"                            : "\(UnicodeScalar(UInt32(0x000025BF))!)",
        "dtrif"                           : "\(UnicodeScalar(UInt32(0x000025BE))!)",
        "duarr"                           : "\(UnicodeScalar(UInt32(0x000021F5))!)",
        "duhar"                           : "\(UnicodeScalar(UInt32(0x0000296F))!)",
        "dwangle"                         : "\(UnicodeScalar(UInt32(0x000029A6))!)",
        "DZcy"                            : "\(UnicodeScalar(UInt32(0x0000040F))!)",
        "dzcy"                            : "\(UnicodeScalar(UInt32(0x0000045F))!)",
        "dzigrarr"                        : "\(UnicodeScalar(UInt32(0x000027FF))!)",
        "Eacute"                          : "\(UnicodeScalar(UInt32(0x000000C9))!)",
        "eacute"                          : "\(UnicodeScalar(UInt32(0x000000E9))!)",
        "easter"                          : "\(UnicodeScalar(UInt32(0x00002A6E))!)",
        "Ecaron"                          : "\(UnicodeScalar(UInt32(0x0000011A))!)",
        "ecaron"                          : "\(UnicodeScalar(UInt32(0x0000011B))!)",
        "ecir"                            : "\(UnicodeScalar(UInt32(0x00002256))!)",
        "Ecirc"                           : "\(UnicodeScalar(UInt32(0x000000CA))!)",
        "ecirc"                           : "\(UnicodeScalar(UInt32(0x000000EA))!)",
        "ecolon"                          : "\(UnicodeScalar(UInt32(0x00002255))!)",
        "Ecy"                             : "\(UnicodeScalar(UInt32(0x0000042D))!)",
        "ecy"                             : "\(UnicodeScalar(UInt32(0x0000044D))!)",
        "eDDot"                           : "\(UnicodeScalar(UInt32(0x00002A77))!)",
        "Edot"                            : "\(UnicodeScalar(UInt32(0x00000116))!)",
        "edot"                            : "\(UnicodeScalar(UInt32(0x00000117))!)",
        "eDot"                            : "\(UnicodeScalar(UInt32(0x00002251))!)",
        "ee"                              : "\(UnicodeScalar(UInt32(0x00002147))!)",
        "efDot"                           : "\(UnicodeScalar(UInt32(0x00002252))!)",
        "Efr"                             : "\(UnicodeScalar(UInt32(0x0001D508))!)",
        "efr"                             : "\(UnicodeScalar(UInt32(0x0001D522))!)",
        "eg"                              : "\(UnicodeScalar(UInt32(0x00002A9A))!)",
        "Egrave"                          : "\(UnicodeScalar(UInt32(0x000000C8))!)",
        "egrave"                          : "\(UnicodeScalar(UInt32(0x000000E8))!)",
        "egs"                             : "\(UnicodeScalar(UInt32(0x00002A96))!)",
        "egsdot"                          : "\(UnicodeScalar(UInt32(0x00002A98))!)",
        "el"                              : "\(UnicodeScalar(UInt32(0x00002A99))!)",
        "Element"                         : "\(UnicodeScalar(UInt32(0x00002208))!)",
        "elinters"                        : "\(UnicodeScalar(UInt32(0x000023E7))!)",
        "ell"                             : "\(UnicodeScalar(UInt32(0x00002113))!)",
        "els"                             : "\(UnicodeScalar(UInt32(0x00002A95))!)",
        "elsdot"                          : "\(UnicodeScalar(UInt32(0x00002A97))!)",
        "Emacr"                           : "\(UnicodeScalar(UInt32(0x00000112))!)",
        "emacr"                           : "\(UnicodeScalar(UInt32(0x00000113))!)",
        "empty"                           : "\(UnicodeScalar(UInt32(0x00002205))!)",
        "emptyset"                        : "\(UnicodeScalar(UInt32(0x00002205))!)",
        "EmptySmallSquare"                : "\(UnicodeScalar(UInt32(0x000025FB))!)",
        "emptyv"                          : "\(UnicodeScalar(UInt32(0x00002205))!)",
        "EmptyVerySmallSquare"            : "\(UnicodeScalar(UInt32(0x000025AB))!)",
        "emsp"                            : "\(UnicodeScalar(UInt32(0x00002003))!)",
        "emsp13"                          : "\(UnicodeScalar(UInt32(0x00002004))!)",
        "emsp14"                          : "\(UnicodeScalar(UInt32(0x00002005))!)",
        "ENG"                             : "\(UnicodeScalar(UInt32(0x0000014A))!)",
        "eng"                             : "\(UnicodeScalar(UInt32(0x0000014B))!)",
        "ensp"                            : "\(UnicodeScalar(UInt32(0x00002002))!)",
        "Eogon"                           : "\(UnicodeScalar(UInt32(0x00000118))!)",
        "eogon"                           : "\(UnicodeScalar(UInt32(0x00000119))!)",
        "Eopf"                            : "\(UnicodeScalar(UInt32(0x0001D53C))!)",
        "eopf"                            : "\(UnicodeScalar(UInt32(0x0001D556))!)",
        "epar"                            : "\(UnicodeScalar(UInt32(0x000022D5))!)",
        "eparsl"                          : "\(UnicodeScalar(UInt32(0x000029E3))!)",
        "eplus"                           : "\(UnicodeScalar(UInt32(0x00002A71))!)",
        "epsi"                            : "\(UnicodeScalar(UInt32(0x000003B5))!)",
        "Epsilon"                         : "\(UnicodeScalar(UInt32(0x00000395))!)",
        "epsilon"                         : "\(UnicodeScalar(UInt32(0x000003B5))!)",
        "epsiv"                           : "\(UnicodeScalar(UInt32(0x000003F5))!)",
        "eqcirc"                          : "\(UnicodeScalar(UInt32(0x00002256))!)",
        "eqcolon"                         : "\(UnicodeScalar(UInt32(0x00002255))!)",
        "eqsim"                           : "\(UnicodeScalar(UInt32(0x00002242))!)",
        "eqslantgtr"                      : "\(UnicodeScalar(UInt32(0x00002A96))!)",
        "eqslantless"                     : "\(UnicodeScalar(UInt32(0x00002A95))!)",
        "Equal"                           : "\(UnicodeScalar(UInt32(0x00002A75))!)",
        "equals"                          : "\(UnicodeScalar(UInt32(0x0000003D))!)",
        "EqualTilde"                      : "\(UnicodeScalar(UInt32(0x00002242))!)",
        "equest"                          : "\(UnicodeScalar(UInt32(0x0000225F))!)",
        "Equilibrium"                     : "\(UnicodeScalar(UInt32(0x000021CC))!)",
        "equiv"                           : "\(UnicodeScalar(UInt32(0x00002261))!)",
        "equivDD"                         : "\(UnicodeScalar(UInt32(0x00002A78))!)",
        "eqvparsl"                        : "\(UnicodeScalar(UInt32(0x000029E5))!)",
        "erarr"                           : "\(UnicodeScalar(UInt32(0x00002971))!)",
        "erDot"                           : "\(UnicodeScalar(UInt32(0x00002253))!)",
        "escr"                            : "\(UnicodeScalar(UInt32(0x0000212F))!)",
        "Escr"                            : "\(UnicodeScalar(UInt32(0x00002130))!)",
        "esdot"                           : "\(UnicodeScalar(UInt32(0x00002250))!)",
        "esim"                            : "\(UnicodeScalar(UInt32(0x00002242))!)",
        "Esim"                            : "\(UnicodeScalar(UInt32(0x00002A73))!)",
        "Eta"                             : "\(UnicodeScalar(UInt32(0x00000397))!)",
        "eta"                             : "\(UnicodeScalar(UInt32(0x000003B7))!)",
        "ETH"                             : "\(UnicodeScalar(UInt32(0x000000D0))!)",
        "eth"                             : "\(UnicodeScalar(UInt32(0x000000F0))!)",
        "Euml"                            : "\(UnicodeScalar(UInt32(0x000000CB))!)",
        "euml"                            : "\(UnicodeScalar(UInt32(0x000000EB))!)",
        "euro"                            : "\(UnicodeScalar(UInt32(0x000020AC))!)",
        "excl"                            : "\(UnicodeScalar(UInt32(0x00000021))!)",
        "exist"                           : "\(UnicodeScalar(UInt32(0x00002203))!)",
        "Exists"                          : "\(UnicodeScalar(UInt32(0x00002203))!)",
        "expectation"                     : "\(UnicodeScalar(UInt32(0x00002130))!)",
        "ExponentialE"                    : "\(UnicodeScalar(UInt32(0x00002147))!)",
        "exponentiale"                    : "\(UnicodeScalar(UInt32(0x00002147))!)",
        "fallingdotseq"                   : "\(UnicodeScalar(UInt32(0x00002252))!)",
        "Fcy"                             : "\(UnicodeScalar(UInt32(0x00000424))!)",
        "fcy"                             : "\(UnicodeScalar(UInt32(0x00000444))!)",
        "female"                          : "\(UnicodeScalar(UInt32(0x00002640))!)",
        "ffilig"                          : "\(UnicodeScalar(UInt32(0x0000FB03))!)",
        "fflig"                           : "\(UnicodeScalar(UInt32(0x0000FB00))!)",
        "ffllig"                          : "\(UnicodeScalar(UInt32(0x0000FB04))!)",
        "Ffr"                             : "\(UnicodeScalar(UInt32(0x0001D509))!)",
        "ffr"                             : "\(UnicodeScalar(UInt32(0x0001D523))!)",
        "filig"                           : "\(UnicodeScalar(UInt32(0x0000FB01))!)",
        "FilledSmallSquare"               : "\(UnicodeScalar(UInt32(0x000025FC))!)",
        "FilledVerySmallSquare"           : "\(UnicodeScalar(UInt32(0x000025AA))!)",
        "fjlig"                           : "\(UnicodeScalar(UInt32(0x00000066))!)\(UnicodeScalar(UInt32(0x0000006A))!)",
        "flat"                            : "\(UnicodeScalar(UInt32(0x0000266D))!)",
        "fllig"                           : "\(UnicodeScalar(UInt32(0x0000FB02))!)",
        "fltns"                           : "\(UnicodeScalar(UInt32(0x000025B1))!)",
        "fnof"                            : "\(UnicodeScalar(UInt32(0x00000192))!)",
        "Fopf"                            : "\(UnicodeScalar(UInt32(0x0001D53D))!)",
        "fopf"                            : "\(UnicodeScalar(UInt32(0x0001D557))!)",
        "forall"                          : "\(UnicodeScalar(UInt32(0x00002200))!)",
        "ForAll"                          : "\(UnicodeScalar(UInt32(0x00002200))!)",
        "fork"                            : "\(UnicodeScalar(UInt32(0x000022D4))!)",
        "forkv"                           : "\(UnicodeScalar(UInt32(0x00002AD9))!)",
        "Fouriertrf"                      : "\(UnicodeScalar(UInt32(0x00002131))!)",
        "fpartint"                        : "\(UnicodeScalar(UInt32(0x00002A0D))!)",
        "frac12"                          : "\(UnicodeScalar(UInt32(0x000000BD))!)",
        "frac13"                          : "\(UnicodeScalar(UInt32(0x00002153))!)",
        "frac14"                          : "\(UnicodeScalar(UInt32(0x000000BC))!)",
        "frac15"                          : "\(UnicodeScalar(UInt32(0x00002155))!)",
        "frac16"                          : "\(UnicodeScalar(UInt32(0x00002159))!)",
        "frac18"                          : "\(UnicodeScalar(UInt32(0x0000215B))!)",
        "frac23"                          : "\(UnicodeScalar(UInt32(0x00002154))!)",
        "frac25"                          : "\(UnicodeScalar(UInt32(0x00002156))!)",
        "frac34"                          : "\(UnicodeScalar(UInt32(0x000000BE))!)",
        "frac35"                          : "\(UnicodeScalar(UInt32(0x00002157))!)",
        "frac38"                          : "\(UnicodeScalar(UInt32(0x0000215C))!)",
        "frac45"                          : "\(UnicodeScalar(UInt32(0x00002158))!)",
        "frac56"                          : "\(UnicodeScalar(UInt32(0x0000215A))!)",
        "frac58"                          : "\(UnicodeScalar(UInt32(0x0000215D))!)",
        "frac78"                          : "\(UnicodeScalar(UInt32(0x0000215E))!)",
        "frasl"                           : "\(UnicodeScalar(UInt32(0x00002044))!)",
        "frown"                           : "\(UnicodeScalar(UInt32(0x00002322))!)",
        "Fscr"                            : "\(UnicodeScalar(UInt32(0x00002131))!)",
        "fscr"                            : "\(UnicodeScalar(UInt32(0x0001D4BB))!)",
        "gacute"                          : "\(UnicodeScalar(UInt32(0x000001F5))!)",
        "Gamma"                           : "\(UnicodeScalar(UInt32(0x00000393))!)",
        "gamma"                           : "\(UnicodeScalar(UInt32(0x000003B3))!)",
        "Gammad"                          : "\(UnicodeScalar(UInt32(0x000003DC))!)",
        "gammad"                          : "\(UnicodeScalar(UInt32(0x000003DD))!)",
        "gap"                             : "\(UnicodeScalar(UInt32(0x00002A86))!)",
        "Gbreve"                          : "\(UnicodeScalar(UInt32(0x0000011E))!)",
        "gbreve"                          : "\(UnicodeScalar(UInt32(0x0000011F))!)",
        "Gcedil"                          : "\(UnicodeScalar(UInt32(0x00000122))!)",
        "Gcirc"                           : "\(UnicodeScalar(UInt32(0x0000011C))!)",
        "gcirc"                           : "\(UnicodeScalar(UInt32(0x0000011D))!)",
        "Gcy"                             : "\(UnicodeScalar(UInt32(0x00000413))!)",
        "gcy"                             : "\(UnicodeScalar(UInt32(0x00000433))!)",
        "Gdot"                            : "\(UnicodeScalar(UInt32(0x00000120))!)",
        "gdot"                            : "\(UnicodeScalar(UInt32(0x00000121))!)",
        "ge"                              : "\(UnicodeScalar(UInt32(0x00002265))!)",
        "gE"                              : "\(UnicodeScalar(UInt32(0x00002267))!)",
        "gel"                             : "\(UnicodeScalar(UInt32(0x000022DB))!)",
        "gEl"                             : "\(UnicodeScalar(UInt32(0x00002A8C))!)",
        "geq"                             : "\(UnicodeScalar(UInt32(0x00002265))!)",
        "geqq"                            : "\(UnicodeScalar(UInt32(0x00002267))!)",
        "geqslant"                        : "\(UnicodeScalar(UInt32(0x00002A7E))!)",
        "ges"                             : "\(UnicodeScalar(UInt32(0x00002A7E))!)",
        "gescc"                           : "\(UnicodeScalar(UInt32(0x00002AA9))!)",
        "gesdot"                          : "\(UnicodeScalar(UInt32(0x00002A80))!)",
        "gesdoto"                         : "\(UnicodeScalar(UInt32(0x00002A82))!)",
        "gesdotol"                        : "\(UnicodeScalar(UInt32(0x00002A84))!)",
        "gesl"                            : "\(UnicodeScalar(UInt32(0x000022DB))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "gesles"                          : "\(UnicodeScalar(UInt32(0x00002A94))!)",
        "Gfr"                             : "\(UnicodeScalar(UInt32(0x0001D50A))!)",
        "gfr"                             : "\(UnicodeScalar(UInt32(0x0001D524))!)",
        "gg"                              : "\(UnicodeScalar(UInt32(0x0000226B))!)",
        "Gg"                              : "\(UnicodeScalar(UInt32(0x000022D9))!)",
        "ggg"                             : "\(UnicodeScalar(UInt32(0x000022D9))!)",
        "gimel"                           : "\(UnicodeScalar(UInt32(0x00002137))!)",
        "GJcy"                            : "\(UnicodeScalar(UInt32(0x00000403))!)",
        "gjcy"                            : "\(UnicodeScalar(UInt32(0x00000453))!)",
        "gl"                              : "\(UnicodeScalar(UInt32(0x00002277))!)",
        "gla"                             : "\(UnicodeScalar(UInt32(0x00002AA5))!)",
        "glE"                             : "\(UnicodeScalar(UInt32(0x00002A92))!)",
        "glj"                             : "\(UnicodeScalar(UInt32(0x00002AA4))!)",
        "gnap"                            : "\(UnicodeScalar(UInt32(0x00002A8A))!)",
        "gnapprox"                        : "\(UnicodeScalar(UInt32(0x00002A8A))!)",
        "gnE"                             : "\(UnicodeScalar(UInt32(0x00002269))!)",
        "gne"                             : "\(UnicodeScalar(UInt32(0x00002A88))!)",
        "gneq"                            : "\(UnicodeScalar(UInt32(0x00002A88))!)",
        "gneqq"                           : "\(UnicodeScalar(UInt32(0x00002269))!)",
        "gnsim"                           : "\(UnicodeScalar(UInt32(0x000022E7))!)",
        "Gopf"                            : "\(UnicodeScalar(UInt32(0x0001D53E))!)",
        "gopf"                            : "\(UnicodeScalar(UInt32(0x0001D558))!)",
        "grave"                           : "\(UnicodeScalar(UInt32(0x00000060))!)",
        "GreaterEqual"                    : "\(UnicodeScalar(UInt32(0x00002265))!)",
        "GreaterEqualLess"                : "\(UnicodeScalar(UInt32(0x000022DB))!)",
        "GreaterFullEqual"                : "\(UnicodeScalar(UInt32(0x00002267))!)",
        "GreaterGreater"                  : "\(UnicodeScalar(UInt32(0x00002AA2))!)",
        "GreaterLess"                     : "\(UnicodeScalar(UInt32(0x00002277))!)",
        "GreaterSlantEqual"               : "\(UnicodeScalar(UInt32(0x00002A7E))!)",
        "GreaterTilde"                    : "\(UnicodeScalar(UInt32(0x00002273))!)",
        "gscr"                            : "\(UnicodeScalar(UInt32(0x0000210A))!)",
        "Gscr"                            : "\(UnicodeScalar(UInt32(0x0001D4A2))!)",
        "gsim"                            : "\(UnicodeScalar(UInt32(0x00002273))!)",
        "gsime"                           : "\(UnicodeScalar(UInt32(0x00002A8E))!)",
        "gsiml"                           : "\(UnicodeScalar(UInt32(0x00002A90))!)",
        "gt"                              : "\(UnicodeScalar(UInt32(0x0000003E))!)",
        "GT"                              : "\(UnicodeScalar(UInt32(0x0000003E))!)",
        "Gt"                              : "\(UnicodeScalar(UInt32(0x0000226B))!)",
        "gtcc"                            : "\(UnicodeScalar(UInt32(0x00002AA7))!)",
        "gtcir"                           : "\(UnicodeScalar(UInt32(0x00002A7A))!)",
        "gtdot"                           : "\(UnicodeScalar(UInt32(0x000022D7))!)",
        "gtlPar"                          : "\(UnicodeScalar(UInt32(0x00002995))!)",
        "gtquest"                         : "\(UnicodeScalar(UInt32(0x00002A7C))!)",
        "gtrapprox"                       : "\(UnicodeScalar(UInt32(0x00002A86))!)",
        "gtrarr"                          : "\(UnicodeScalar(UInt32(0x00002978))!)",
        "gtrdot"                          : "\(UnicodeScalar(UInt32(0x000022D7))!)",
        "gtreqless"                       : "\(UnicodeScalar(UInt32(0x000022DB))!)",
        "gtreqqless"                      : "\(UnicodeScalar(UInt32(0x00002A8C))!)",
        "gtrless"                         : "\(UnicodeScalar(UInt32(0x00002277))!)",
        "gtrsim"                          : "\(UnicodeScalar(UInt32(0x00002273))!)",
        "gvertneqq"                       : "\(UnicodeScalar(UInt32(0x00002269))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "gvnE"                            : "\(UnicodeScalar(UInt32(0x00002269))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "Hacek"                           : "\(UnicodeScalar(UInt32(0x000002C7))!)",
        "hairsp"                          : "\(UnicodeScalar(UInt32(0x0000200A))!)",
        "half"                            : "\(UnicodeScalar(UInt32(0x000000BD))!)",
        "hamilt"                          : "\(UnicodeScalar(UInt32(0x0000210B))!)",
        "HARDcy"                          : "\(UnicodeScalar(UInt32(0x0000042A))!)",
        "hardcy"                          : "\(UnicodeScalar(UInt32(0x0000044A))!)",
        "harr"                            : "\(UnicodeScalar(UInt32(0x00002194))!)",
        "hArr"                            : "\(UnicodeScalar(UInt32(0x000021D4))!)",
        "harrcir"                         : "\(UnicodeScalar(UInt32(0x00002948))!)",
        "harrw"                           : "\(UnicodeScalar(UInt32(0x000021AD))!)",
        "Hat"                             : "\(UnicodeScalar(UInt32(0x0000005E))!)",
        "hbar"                            : "\(UnicodeScalar(UInt32(0x0000210F))!)",
        "Hcirc"                           : "\(UnicodeScalar(UInt32(0x00000124))!)",
        "hcirc"                           : "\(UnicodeScalar(UInt32(0x00000125))!)",
        "hearts"                          : "\(UnicodeScalar(UInt32(0x00002665))!)",
        "heartsuit"                       : "\(UnicodeScalar(UInt32(0x00002665))!)",
        "hellip"                          : "\(UnicodeScalar(UInt32(0x00002026))!)",
        "hercon"                          : "\(UnicodeScalar(UInt32(0x000022B9))!)",
        "Hfr"                             : "\(UnicodeScalar(UInt32(0x0000210C))!)",
        "hfr"                             : "\(UnicodeScalar(UInt32(0x0001D525))!)",
        "HilbertSpace"                    : "\(UnicodeScalar(UInt32(0x0000210B))!)",
        "hksearow"                        : "\(UnicodeScalar(UInt32(0x00002925))!)",
        "hkswarow"                        : "\(UnicodeScalar(UInt32(0x00002926))!)",
        "hoarr"                           : "\(UnicodeScalar(UInt32(0x000021FF))!)",
        "homtht"                          : "\(UnicodeScalar(UInt32(0x0000223B))!)",
        "hookleftarrow"                   : "\(UnicodeScalar(UInt32(0x000021A9))!)",
        "hookrightarrow"                  : "\(UnicodeScalar(UInt32(0x000021AA))!)",
        "Hopf"                            : "\(UnicodeScalar(UInt32(0x0000210D))!)",
        "hopf"                            : "\(UnicodeScalar(UInt32(0x0001D559))!)",
        "horbar"                          : "\(UnicodeScalar(UInt32(0x00002015))!)",
        "HorizontalLine"                  : "\(UnicodeScalar(UInt32(0x00002500))!)",
        "Hscr"                            : "\(UnicodeScalar(UInt32(0x0000210B))!)",
        "hscr"                            : "\(UnicodeScalar(UInt32(0x0001D4BD))!)",
        "hslash"                          : "\(UnicodeScalar(UInt32(0x0000210F))!)",
        "Hstrok"                          : "\(UnicodeScalar(UInt32(0x00000126))!)",
        "hstrok"                          : "\(UnicodeScalar(UInt32(0x00000127))!)",
        "HumpDownHump"                    : "\(UnicodeScalar(UInt32(0x0000224E))!)",
        "HumpEqual"                       : "\(UnicodeScalar(UInt32(0x0000224F))!)",
        "hybull"                          : "\(UnicodeScalar(UInt32(0x00002043))!)",
        "hyphen"                          : "\(UnicodeScalar(UInt32(0x00002010))!)",
        "Iacute"                          : "\(UnicodeScalar(UInt32(0x000000CD))!)",
        "iacute"                          : "\(UnicodeScalar(UInt32(0x000000ED))!)",
        "ic"                              : "\(UnicodeScalar(UInt32(0x00002063))!)",
        "Icirc"                           : "\(UnicodeScalar(UInt32(0x000000CE))!)",
        "icirc"                           : "\(UnicodeScalar(UInt32(0x000000EE))!)",
        "Icy"                             : "\(UnicodeScalar(UInt32(0x00000418))!)",
        "icy"                             : "\(UnicodeScalar(UInt32(0x00000438))!)",
        "Idot"                            : "\(UnicodeScalar(UInt32(0x00000130))!)",
        "IEcy"                            : "\(UnicodeScalar(UInt32(0x00000415))!)",
        "iecy"                            : "\(UnicodeScalar(UInt32(0x00000435))!)",
        "iexcl"                           : "\(UnicodeScalar(UInt32(0x000000A1))!)",
        "iff"                             : "\(UnicodeScalar(UInt32(0x000021D4))!)",
        "Ifr"                             : "\(UnicodeScalar(UInt32(0x00002111))!)",
        "ifr"                             : "\(UnicodeScalar(UInt32(0x0001D526))!)",
        "Igrave"                          : "\(UnicodeScalar(UInt32(0x000000CC))!)",
        "igrave"                          : "\(UnicodeScalar(UInt32(0x000000EC))!)",
        "ii"                              : "\(UnicodeScalar(UInt32(0x00002148))!)",
        "iiiint"                          : "\(UnicodeScalar(UInt32(0x00002A0C))!)",
        "iiint"                           : "\(UnicodeScalar(UInt32(0x0000222D))!)",
        "iinfin"                          : "\(UnicodeScalar(UInt32(0x000029DC))!)",
        "iiota"                           : "\(UnicodeScalar(UInt32(0x00002129))!)",
        "IJlig"                           : "\(UnicodeScalar(UInt32(0x00000132))!)",
        "ijlig"                           : "\(UnicodeScalar(UInt32(0x00000133))!)",
        "Im"                              : "\(UnicodeScalar(UInt32(0x00002111))!)",
        "Imacr"                           : "\(UnicodeScalar(UInt32(0x0000012A))!)",
        "imacr"                           : "\(UnicodeScalar(UInt32(0x0000012B))!)",
        "image"                           : "\(UnicodeScalar(UInt32(0x00002111))!)",
        "ImaginaryI"                      : "\(UnicodeScalar(UInt32(0x00002148))!)",
        "imagline"                        : "\(UnicodeScalar(UInt32(0x00002110))!)",
        "imagpart"                        : "\(UnicodeScalar(UInt32(0x00002111))!)",
        "imath"                           : "\(UnicodeScalar(UInt32(0x00000131))!)",
        "imof"                            : "\(UnicodeScalar(UInt32(0x000022B7))!)",
        "imped"                           : "\(UnicodeScalar(UInt32(0x000001B5))!)",
        "Implies"                         : "\(UnicodeScalar(UInt32(0x000021D2))!)",
        "in"                              : "\(UnicodeScalar(UInt32(0x00002208))!)",
        "incare"                          : "\(UnicodeScalar(UInt32(0x00002105))!)",
        "infin"                           : "\(UnicodeScalar(UInt32(0x0000221E))!)",
        "infintie"                        : "\(UnicodeScalar(UInt32(0x000029DD))!)",
        "inodot"                          : "\(UnicodeScalar(UInt32(0x00000131))!)",
        "int"                             : "\(UnicodeScalar(UInt32(0x0000222B))!)",
        "Int"                             : "\(UnicodeScalar(UInt32(0x0000222C))!)",
        "intcal"                          : "\(UnicodeScalar(UInt32(0x000022BA))!)",
        "integers"                        : "\(UnicodeScalar(UInt32(0x00002124))!)",
        "Integral"                        : "\(UnicodeScalar(UInt32(0x0000222B))!)",
        "intercal"                        : "\(UnicodeScalar(UInt32(0x000022BA))!)",
        "Intersection"                    : "\(UnicodeScalar(UInt32(0x000022C2))!)",
        "intlarhk"                        : "\(UnicodeScalar(UInt32(0x00002A17))!)",
        "intprod"                         : "\(UnicodeScalar(UInt32(0x00002A3C))!)",
        "InvisibleComma"                  : "\(UnicodeScalar(UInt32(0x00002063))!)",
        "InvisibleTimes"                  : "\(UnicodeScalar(UInt32(0x00002062))!)",
        "IOcy"                            : "\(UnicodeScalar(UInt32(0x00000401))!)",
        "iocy"                            : "\(UnicodeScalar(UInt32(0x00000451))!)",
        "Iogon"                           : "\(UnicodeScalar(UInt32(0x0000012E))!)",
        "iogon"                           : "\(UnicodeScalar(UInt32(0x0000012F))!)",
        "Iopf"                            : "\(UnicodeScalar(UInt32(0x0001D540))!)",
        "iopf"                            : "\(UnicodeScalar(UInt32(0x0001D55A))!)",
        "Iota"                            : "\(UnicodeScalar(UInt32(0x00000399))!)",
        "iota"                            : "\(UnicodeScalar(UInt32(0x000003B9))!)",
        "iprod"                           : "\(UnicodeScalar(UInt32(0x00002A3C))!)",
        "iquest"                          : "\(UnicodeScalar(UInt32(0x000000BF))!)",
        "Iscr"                            : "\(UnicodeScalar(UInt32(0x00002110))!)",
        "iscr"                            : "\(UnicodeScalar(UInt32(0x0001D4BE))!)",
        "isin"                            : "\(UnicodeScalar(UInt32(0x00002208))!)",
        "isindot"                         : "\(UnicodeScalar(UInt32(0x000022F5))!)",
        "isinE"                           : "\(UnicodeScalar(UInt32(0x000022F9))!)",
        "isins"                           : "\(UnicodeScalar(UInt32(0x000022F4))!)",
        "isinsv"                          : "\(UnicodeScalar(UInt32(0x000022F3))!)",
        "isinv"                           : "\(UnicodeScalar(UInt32(0x00002208))!)",
        "it"                              : "\(UnicodeScalar(UInt32(0x00002062))!)",
        "Itilde"                          : "\(UnicodeScalar(UInt32(0x00000128))!)",
        "itilde"                          : "\(UnicodeScalar(UInt32(0x00000129))!)",
        "Iukcy"                           : "\(UnicodeScalar(UInt32(0x00000406))!)",
        "iukcy"                           : "\(UnicodeScalar(UInt32(0x00000456))!)",
        "Iuml"                            : "\(UnicodeScalar(UInt32(0x000000CF))!)",
        "iuml"                            : "\(UnicodeScalar(UInt32(0x000000EF))!)",
        "Jcirc"                           : "\(UnicodeScalar(UInt32(0x00000134))!)",
        "jcirc"                           : "\(UnicodeScalar(UInt32(0x00000135))!)",
        "Jcy"                             : "\(UnicodeScalar(UInt32(0x00000419))!)",
        "jcy"                             : "\(UnicodeScalar(UInt32(0x00000439))!)",
        "Jfr"                             : "\(UnicodeScalar(UInt32(0x0001D50D))!)",
        "jfr"                             : "\(UnicodeScalar(UInt32(0x0001D527))!)",
        "jmath"                           : "\(UnicodeScalar(UInt32(0x00000237))!)",
        "Jopf"                            : "\(UnicodeScalar(UInt32(0x0001D541))!)",
        "jopf"                            : "\(UnicodeScalar(UInt32(0x0001D55B))!)",
        "Jscr"                            : "\(UnicodeScalar(UInt32(0x0001D4A5))!)",
        "jscr"                            : "\(UnicodeScalar(UInt32(0x0001D4BF))!)",
        "Jsercy"                          : "\(UnicodeScalar(UInt32(0x00000408))!)",
        "jsercy"                          : "\(UnicodeScalar(UInt32(0x00000458))!)",
        "Jukcy"                           : "\(UnicodeScalar(UInt32(0x00000404))!)",
        "jukcy"                           : "\(UnicodeScalar(UInt32(0x00000454))!)",
        "Kappa"                           : "\(UnicodeScalar(UInt32(0x0000039A))!)",
        "kappa"                           : "\(UnicodeScalar(UInt32(0x000003BA))!)",
        "kappav"                          : "\(UnicodeScalar(UInt32(0x000003F0))!)",
        "Kcedil"                          : "\(UnicodeScalar(UInt32(0x00000136))!)",
        "kcedil"                          : "\(UnicodeScalar(UInt32(0x00000137))!)",
        "Kcy"                             : "\(UnicodeScalar(UInt32(0x0000041A))!)",
        "kcy"                             : "\(UnicodeScalar(UInt32(0x0000043A))!)",
        "Kfr"                             : "\(UnicodeScalar(UInt32(0x0001D50E))!)",
        "kfr"                             : "\(UnicodeScalar(UInt32(0x0001D528))!)",
        "kgreen"                          : "\(UnicodeScalar(UInt32(0x00000138))!)",
        "KHcy"                            : "\(UnicodeScalar(UInt32(0x00000425))!)",
        "khcy"                            : "\(UnicodeScalar(UInt32(0x00000445))!)",
        "KJcy"                            : "\(UnicodeScalar(UInt32(0x0000040C))!)",
        "kjcy"                            : "\(UnicodeScalar(UInt32(0x0000045C))!)",
        "Kopf"                            : "\(UnicodeScalar(UInt32(0x0001D542))!)",
        "kopf"                            : "\(UnicodeScalar(UInt32(0x0001D55C))!)",
        "Kscr"                            : "\(UnicodeScalar(UInt32(0x0001D4A6))!)",
        "kscr"                            : "\(UnicodeScalar(UInt32(0x0001D4C0))!)",
        "lAarr"                           : "\(UnicodeScalar(UInt32(0x000021DA))!)",
        "Lacute"                          : "\(UnicodeScalar(UInt32(0x00000139))!)",
        "lacute"                          : "\(UnicodeScalar(UInt32(0x0000013A))!)",
        "laemptyv"                        : "\(UnicodeScalar(UInt32(0x000029B4))!)",
        "lagran"                          : "\(UnicodeScalar(UInt32(0x00002112))!)",
        "Lambda"                          : "\(UnicodeScalar(UInt32(0x0000039B))!)",
        "lambda"                          : "\(UnicodeScalar(UInt32(0x000003BB))!)",
        "lang"                            : "\(UnicodeScalar(UInt32(0x000027E8))!)",
        "Lang"                            : "\(UnicodeScalar(UInt32(0x000027EA))!)",
        "langd"                           : "\(UnicodeScalar(UInt32(0x00002991))!)",
        "langle"                          : "\(UnicodeScalar(UInt32(0x000027E8))!)",
        "lap"                             : "\(UnicodeScalar(UInt32(0x00002A85))!)",
        "Laplacetrf"                      : "\(UnicodeScalar(UInt32(0x00002112))!)",
        "laquo"                           : "\(UnicodeScalar(UInt32(0x000000AB))!)",
        "larr"                            : "\(UnicodeScalar(UInt32(0x00002190))!)",
        "Larr"                            : "\(UnicodeScalar(UInt32(0x0000219E))!)",
        "lArr"                            : "\(UnicodeScalar(UInt32(0x000021D0))!)",
        "larrb"                           : "\(UnicodeScalar(UInt32(0x000021E4))!)",
        "larrbfs"                         : "\(UnicodeScalar(UInt32(0x0000291F))!)",
        "larrfs"                          : "\(UnicodeScalar(UInt32(0x0000291D))!)",
        "larrhk"                          : "\(UnicodeScalar(UInt32(0x000021A9))!)",
        "larrlp"                          : "\(UnicodeScalar(UInt32(0x000021AB))!)",
        "larrpl"                          : "\(UnicodeScalar(UInt32(0x00002939))!)",
        "larrsim"                         : "\(UnicodeScalar(UInt32(0x00002973))!)",
        "larrtl"                          : "\(UnicodeScalar(UInt32(0x000021A2))!)",
        "lat"                             : "\(UnicodeScalar(UInt32(0x00002AAB))!)",
        "latail"                          : "\(UnicodeScalar(UInt32(0x00002919))!)",
        "lAtail"                          : "\(UnicodeScalar(UInt32(0x0000291B))!)",
        "late"                            : "\(UnicodeScalar(UInt32(0x00002AAD))!)",
        "lates"                           : "\(UnicodeScalar(UInt32(0x00002AAD))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "lbarr"                           : "\(UnicodeScalar(UInt32(0x0000290C))!)",
        "lBarr"                           : "\(UnicodeScalar(UInt32(0x0000290E))!)",
        "lbbrk"                           : "\(UnicodeScalar(UInt32(0x00002772))!)",
        "lbrace"                          : "\(UnicodeScalar(UInt32(0x0000007B))!)",
        "lbrack"                          : "\(UnicodeScalar(UInt32(0x0000005B))!)",
        "lbrke"                           : "\(UnicodeScalar(UInt32(0x0000298B))!)",
        "lbrksld"                         : "\(UnicodeScalar(UInt32(0x0000298F))!)",
        "lbrkslu"                         : "\(UnicodeScalar(UInt32(0x0000298D))!)",
        "Lcaron"                          : "\(UnicodeScalar(UInt32(0x0000013D))!)",
        "lcaron"                          : "\(UnicodeScalar(UInt32(0x0000013E))!)",
        "Lcedil"                          : "\(UnicodeScalar(UInt32(0x0000013B))!)",
        "lcedil"                          : "\(UnicodeScalar(UInt32(0x0000013C))!)",
        "lceil"                           : "\(UnicodeScalar(UInt32(0x00002308))!)",
        "lcub"                            : "\(UnicodeScalar(UInt32(0x0000007B))!)",
        "Lcy"                             : "\(UnicodeScalar(UInt32(0x0000041B))!)",
        "lcy"                             : "\(UnicodeScalar(UInt32(0x0000043B))!)",
        "ldca"                            : "\(UnicodeScalar(UInt32(0x00002936))!)",
        "ldquo"                           : "\(UnicodeScalar(UInt32(0x0000201C))!)",
        "ldquor"                          : "\(UnicodeScalar(UInt32(0x0000201E))!)",
        "ldrdhar"                         : "\(UnicodeScalar(UInt32(0x00002967))!)",
        "ldrushar"                        : "\(UnicodeScalar(UInt32(0x0000294B))!)",
        "ldsh"                            : "\(UnicodeScalar(UInt32(0x000021B2))!)",
        "le"                              : "\(UnicodeScalar(UInt32(0x00002264))!)",
        "lE"                              : "\(UnicodeScalar(UInt32(0x00002266))!)",
        "LeftAngleBracket"                : "\(UnicodeScalar(UInt32(0x000027E8))!)",
        "leftarrow"                       : "\(UnicodeScalar(UInt32(0x00002190))!)",
        "LeftArrow"                       : "\(UnicodeScalar(UInt32(0x00002190))!)",
        "Leftarrow"                       : "\(UnicodeScalar(UInt32(0x000021D0))!)",
        "LeftArrowBar"                    : "\(UnicodeScalar(UInt32(0x000021E4))!)",
        "LeftArrowRightArrow"             : "\(UnicodeScalar(UInt32(0x000021C6))!)",
        "leftarrowtail"                   : "\(UnicodeScalar(UInt32(0x000021A2))!)",
        "LeftCeiling"                     : "\(UnicodeScalar(UInt32(0x00002308))!)",
        "LeftDoubleBracket"               : "\(UnicodeScalar(UInt32(0x000027E6))!)",
        "LeftDownTeeVector"               : "\(UnicodeScalar(UInt32(0x00002961))!)",
        "LeftDownVector"                  : "\(UnicodeScalar(UInt32(0x000021C3))!)",
        "LeftDownVectorBar"               : "\(UnicodeScalar(UInt32(0x00002959))!)",
        "LeftFloor"                       : "\(UnicodeScalar(UInt32(0x0000230A))!)",
        "leftharpoondown"                 : "\(UnicodeScalar(UInt32(0x000021BD))!)",
        "leftharpoonup"                   : "\(UnicodeScalar(UInt32(0x000021BC))!)",
        "leftleftarrows"                  : "\(UnicodeScalar(UInt32(0x000021C7))!)",
        "leftrightarrow"                  : "\(UnicodeScalar(UInt32(0x00002194))!)",
        "LeftRightArrow"                  : "\(UnicodeScalar(UInt32(0x00002194))!)",
        "Leftrightarrow"                  : "\(UnicodeScalar(UInt32(0x000021D4))!)",
        "leftrightarrows"                 : "\(UnicodeScalar(UInt32(0x000021C6))!)",
        "leftrightharpoons"               : "\(UnicodeScalar(UInt32(0x000021CB))!)",
        "leftrightsquigarrow"             : "\(UnicodeScalar(UInt32(0x000021AD))!)",
        "LeftRightVector"                 : "\(UnicodeScalar(UInt32(0x0000294E))!)",
        "LeftTee"                         : "\(UnicodeScalar(UInt32(0x000022A3))!)",
        "LeftTeeArrow"                    : "\(UnicodeScalar(UInt32(0x000021A4))!)",
        "LeftTeeVector"                   : "\(UnicodeScalar(UInt32(0x0000295A))!)",
        "leftthreetimes"                  : "\(UnicodeScalar(UInt32(0x000022CB))!)",
        "LeftTriangle"                    : "\(UnicodeScalar(UInt32(0x000022B2))!)",
        "LeftTriangleBar"                 : "\(UnicodeScalar(UInt32(0x000029CF))!)",
        "LeftTriangleEqual"               : "\(UnicodeScalar(UInt32(0x000022B4))!)",
        "LeftUpDownVector"                : "\(UnicodeScalar(UInt32(0x00002951))!)",
        "LeftUpTeeVector"                 : "\(UnicodeScalar(UInt32(0x00002960))!)",
        "LeftUpVector"                    : "\(UnicodeScalar(UInt32(0x000021BF))!)",
        "LeftUpVectorBar"                 : "\(UnicodeScalar(UInt32(0x00002958))!)",
        "LeftVector"                      : "\(UnicodeScalar(UInt32(0x000021BC))!)",
        "LeftVectorBar"                   : "\(UnicodeScalar(UInt32(0x00002952))!)",
        "leg"                             : "\(UnicodeScalar(UInt32(0x000022DA))!)",
        "lEg"                             : "\(UnicodeScalar(UInt32(0x00002A8B))!)",
        "leq"                             : "\(UnicodeScalar(UInt32(0x00002264))!)",
        "leqq"                            : "\(UnicodeScalar(UInt32(0x00002266))!)",
        "leqslant"                        : "\(UnicodeScalar(UInt32(0x00002A7D))!)",
        "les"                             : "\(UnicodeScalar(UInt32(0x00002A7D))!)",
        "lescc"                           : "\(UnicodeScalar(UInt32(0x00002AA8))!)",
        "lesdot"                          : "\(UnicodeScalar(UInt32(0x00002A7F))!)",
        "lesdoto"                         : "\(UnicodeScalar(UInt32(0x00002A81))!)",
        "lesdotor"                        : "\(UnicodeScalar(UInt32(0x00002A83))!)",
        "lesg"                            : "\(UnicodeScalar(UInt32(0x000022DA))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "lesges"                          : "\(UnicodeScalar(UInt32(0x00002A93))!)",
        "lessapprox"                      : "\(UnicodeScalar(UInt32(0x00002A85))!)",
        "lessdot"                         : "\(UnicodeScalar(UInt32(0x000022D6))!)",
        "lesseqgtr"                       : "\(UnicodeScalar(UInt32(0x000022DA))!)",
        "lesseqqgtr"                      : "\(UnicodeScalar(UInt32(0x00002A8B))!)",
        "LessEqualGreater"                : "\(UnicodeScalar(UInt32(0x000022DA))!)",
        "LessFullEqual"                   : "\(UnicodeScalar(UInt32(0x00002266))!)",
        "LessGreater"                     : "\(UnicodeScalar(UInt32(0x00002276))!)",
        "lessgtr"                         : "\(UnicodeScalar(UInt32(0x00002276))!)",
        "LessLess"                        : "\(UnicodeScalar(UInt32(0x00002AA1))!)",
        "lesssim"                         : "\(UnicodeScalar(UInt32(0x00002272))!)",
        "LessSlantEqual"                  : "\(UnicodeScalar(UInt32(0x00002A7D))!)",
        "LessTilde"                       : "\(UnicodeScalar(UInt32(0x00002272))!)",
        "lfisht"                          : "\(UnicodeScalar(UInt32(0x0000297C))!)",
        "lfloor"                          : "\(UnicodeScalar(UInt32(0x0000230A))!)",
        "Lfr"                             : "\(UnicodeScalar(UInt32(0x0001D50F))!)",
        "lfr"                             : "\(UnicodeScalar(UInt32(0x0001D529))!)",
        "lg"                              : "\(UnicodeScalar(UInt32(0x00002276))!)",
        "lgE"                             : "\(UnicodeScalar(UInt32(0x00002A91))!)",
        "lHar"                            : "\(UnicodeScalar(UInt32(0x00002962))!)",
        "lhard"                           : "\(UnicodeScalar(UInt32(0x000021BD))!)",
        "lharu"                           : "\(UnicodeScalar(UInt32(0x000021BC))!)",
        "lharul"                          : "\(UnicodeScalar(UInt32(0x0000296A))!)",
        "lhblk"                           : "\(UnicodeScalar(UInt32(0x00002584))!)",
        "LJcy"                            : "\(UnicodeScalar(UInt32(0x00000409))!)",
        "ljcy"                            : "\(UnicodeScalar(UInt32(0x00000459))!)",
        "ll"                              : "\(UnicodeScalar(UInt32(0x0000226A))!)",
        "Ll"                              : "\(UnicodeScalar(UInt32(0x000022D8))!)",
        "llarr"                           : "\(UnicodeScalar(UInt32(0x000021C7))!)",
        "llcorner"                        : "\(UnicodeScalar(UInt32(0x0000231E))!)",
        "Lleftarrow"                      : "\(UnicodeScalar(UInt32(0x000021DA))!)",
        "llhard"                          : "\(UnicodeScalar(UInt32(0x0000296B))!)",
        "lltri"                           : "\(UnicodeScalar(UInt32(0x000025FA))!)",
        "Lmidot"                          : "\(UnicodeScalar(UInt32(0x0000013F))!)",
        "lmidot"                          : "\(UnicodeScalar(UInt32(0x00000140))!)",
        "lmoust"                          : "\(UnicodeScalar(UInt32(0x000023B0))!)",
        "lmoustache"                      : "\(UnicodeScalar(UInt32(0x000023B0))!)",
        "lnap"                            : "\(UnicodeScalar(UInt32(0x00002A89))!)",
        "lnapprox"                        : "\(UnicodeScalar(UInt32(0x00002A89))!)",
        "lnE"                             : "\(UnicodeScalar(UInt32(0x00002268))!)",
        "lne"                             : "\(UnicodeScalar(UInt32(0x00002A87))!)",
        "lneq"                            : "\(UnicodeScalar(UInt32(0x00002A87))!)",
        "lneqq"                           : "\(UnicodeScalar(UInt32(0x00002268))!)",
        "lnsim"                           : "\(UnicodeScalar(UInt32(0x000022E6))!)",
        "loang"                           : "\(UnicodeScalar(UInt32(0x000027EC))!)",
        "loarr"                           : "\(UnicodeScalar(UInt32(0x000021FD))!)",
        "lobrk"                           : "\(UnicodeScalar(UInt32(0x000027E6))!)",
        "longleftarrow"                   : "\(UnicodeScalar(UInt32(0x000027F5))!)",
        "LongLeftArrow"                   : "\(UnicodeScalar(UInt32(0x000027F5))!)",
        "Longleftarrow"                   : "\(UnicodeScalar(UInt32(0x000027F8))!)",
        "longleftrightarrow"              : "\(UnicodeScalar(UInt32(0x000027F7))!)",
        "LongLeftRightArrow"              : "\(UnicodeScalar(UInt32(0x000027F7))!)",
        "Longleftrightarrow"              : "\(UnicodeScalar(UInt32(0x000027FA))!)",
        "longmapsto"                      : "\(UnicodeScalar(UInt32(0x000027FC))!)",
        "longrightarrow"                  : "\(UnicodeScalar(UInt32(0x000027F6))!)",
        "LongRightArrow"                  : "\(UnicodeScalar(UInt32(0x000027F6))!)",
        "Longrightarrow"                  : "\(UnicodeScalar(UInt32(0x000027F9))!)",
        "looparrowleft"                   : "\(UnicodeScalar(UInt32(0x000021AB))!)",
        "looparrowright"                  : "\(UnicodeScalar(UInt32(0x000021AC))!)",
        "lopar"                           : "\(UnicodeScalar(UInt32(0x00002985))!)",
        "Lopf"                            : "\(UnicodeScalar(UInt32(0x0001D543))!)",
        "lopf"                            : "\(UnicodeScalar(UInt32(0x0001D55D))!)",
        "loplus"                          : "\(UnicodeScalar(UInt32(0x00002A2D))!)",
        "lotimes"                         : "\(UnicodeScalar(UInt32(0x00002A34))!)",
        "lowast"                          : "\(UnicodeScalar(UInt32(0x00002217))!)",
        "lowbar"                          : "\(UnicodeScalar(UInt32(0x0000005F))!)",
        "LowerLeftArrow"                  : "\(UnicodeScalar(UInt32(0x00002199))!)",
        "LowerRightArrow"                 : "\(UnicodeScalar(UInt32(0x00002198))!)",
        "loz"                             : "\(UnicodeScalar(UInt32(0x000025CA))!)",
        "lozenge"                         : "\(UnicodeScalar(UInt32(0x000025CA))!)",
        "lozf"                            : "\(UnicodeScalar(UInt32(0x000029EB))!)",
        "lpar"                            : "\(UnicodeScalar(UInt32(0x00000028))!)",
        "lparlt"                          : "\(UnicodeScalar(UInt32(0x00002993))!)",
        "lrarr"                           : "\(UnicodeScalar(UInt32(0x000021C6))!)",
        "lrcorner"                        : "\(UnicodeScalar(UInt32(0x0000231F))!)",
        "lrhar"                           : "\(UnicodeScalar(UInt32(0x000021CB))!)",
        "lrhard"                          : "\(UnicodeScalar(UInt32(0x0000296D))!)",
        "lrm"                             : "\(UnicodeScalar(UInt32(0x0000200E))!)",
        "lrtri"                           : "\(UnicodeScalar(UInt32(0x000022BF))!)",
        "lsaquo"                          : "\(UnicodeScalar(UInt32(0x00002039))!)",
        "Lscr"                            : "\(UnicodeScalar(UInt32(0x00002112))!)",
        "lscr"                            : "\(UnicodeScalar(UInt32(0x0001D4C1))!)",
        "lsh"                             : "\(UnicodeScalar(UInt32(0x000021B0))!)",
        "Lsh"                             : "\(UnicodeScalar(UInt32(0x000021B0))!)",
        "lsim"                            : "\(UnicodeScalar(UInt32(0x00002272))!)",
        "lsime"                           : "\(UnicodeScalar(UInt32(0x00002A8D))!)",
        "lsimg"                           : "\(UnicodeScalar(UInt32(0x00002A8F))!)",
        "lsqb"                            : "\(UnicodeScalar(UInt32(0x0000005B))!)",
        "lsquo"                           : "\(UnicodeScalar(UInt32(0x00002018))!)",
        "lsquor"                          : "\(UnicodeScalar(UInt32(0x0000201A))!)",
        "Lstrok"                          : "\(UnicodeScalar(UInt32(0x00000141))!)",
        "lstrok"                          : "\(UnicodeScalar(UInt32(0x00000142))!)",
        "lt"                              : "\(UnicodeScalar(UInt32(0x0000003C))!)",
        "LT"                              : "\(UnicodeScalar(UInt32(0x0000003C))!)",
        "Lt"                              : "\(UnicodeScalar(UInt32(0x0000226A))!)",
        "ltcc"                            : "\(UnicodeScalar(UInt32(0x00002AA6))!)",
        "ltcir"                           : "\(UnicodeScalar(UInt32(0x00002A79))!)",
        "ltdot"                           : "\(UnicodeScalar(UInt32(0x000022D6))!)",
        "lthree"                          : "\(UnicodeScalar(UInt32(0x000022CB))!)",
        "ltimes"                          : "\(UnicodeScalar(UInt32(0x000022C9))!)",
        "ltlarr"                          : "\(UnicodeScalar(UInt32(0x00002976))!)",
        "ltquest"                         : "\(UnicodeScalar(UInt32(0x00002A7B))!)",
        "ltri"                            : "\(UnicodeScalar(UInt32(0x000025C3))!)",
        "ltrie"                           : "\(UnicodeScalar(UInt32(0x000022B4))!)",
        "ltrif"                           : "\(UnicodeScalar(UInt32(0x000025C2))!)",
        "ltrPar"                          : "\(UnicodeScalar(UInt32(0x00002996))!)",
        "lurdshar"                        : "\(UnicodeScalar(UInt32(0x0000294A))!)",
        "luruhar"                         : "\(UnicodeScalar(UInt32(0x00002966))!)",
        "lvertneqq"                       : "\(UnicodeScalar(UInt32(0x00002268))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "lvnE"                            : "\(UnicodeScalar(UInt32(0x00002268))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "macr"                            : "\(UnicodeScalar(UInt32(0x000000AF))!)",
        "male"                            : "\(UnicodeScalar(UInt32(0x00002642))!)",
        "malt"                            : "\(UnicodeScalar(UInt32(0x00002720))!)",
        "maltese"                         : "\(UnicodeScalar(UInt32(0x00002720))!)",
        "map"                             : "\(UnicodeScalar(UInt32(0x000021A6))!)",
        "Map"                             : "\(UnicodeScalar(UInt32(0x00002905))!)",
        "mapsto"                          : "\(UnicodeScalar(UInt32(0x000021A6))!)",
        "mapstodown"                      : "\(UnicodeScalar(UInt32(0x000021A7))!)",
        "mapstoleft"                      : "\(UnicodeScalar(UInt32(0x000021A4))!)",
        "mapstoup"                        : "\(UnicodeScalar(UInt32(0x000021A5))!)",
        "marker"                          : "\(UnicodeScalar(UInt32(0x000025AE))!)",
        "mcomma"                          : "\(UnicodeScalar(UInt32(0x00002A29))!)",
        "Mcy"                             : "\(UnicodeScalar(UInt32(0x0000041C))!)",
        "mcy"                             : "\(UnicodeScalar(UInt32(0x0000043C))!)",
        "mdash"                           : "\(UnicodeScalar(UInt32(0x00002014))!)",
        "mDDot"                           : "\(UnicodeScalar(UInt32(0x0000223A))!)",
        "measuredangle"                   : "\(UnicodeScalar(UInt32(0x00002221))!)",
        "MediumSpace"                     : "\(UnicodeScalar(UInt32(0x0000205F))!)",
        "Mellintrf"                       : "\(UnicodeScalar(UInt32(0x00002133))!)",
        "Mfr"                             : "\(UnicodeScalar(UInt32(0x0001D510))!)",
        "mfr"                             : "\(UnicodeScalar(UInt32(0x0001D52A))!)",
        "mho"                             : "\(UnicodeScalar(UInt32(0x00002127))!)",
        "micro"                           : "\(UnicodeScalar(UInt32(0x000000B5))!)",
        "mid"                             : "\(UnicodeScalar(UInt32(0x00002223))!)",
        "midast"                          : "\(UnicodeScalar(UInt32(0x0000002A))!)",
        "midcir"                          : "\(UnicodeScalar(UInt32(0x00002AF0))!)",
        "middot"                          : "\(UnicodeScalar(UInt32(0x000000B7))!)",
        "minus"                           : "\(UnicodeScalar(UInt32(0x00002212))!)",
        "minusb"                          : "\(UnicodeScalar(UInt32(0x0000229F))!)",
        "minusd"                          : "\(UnicodeScalar(UInt32(0x00002238))!)",
        "minusdu"                         : "\(UnicodeScalar(UInt32(0x00002A2A))!)",
        "MinusPlus"                       : "\(UnicodeScalar(UInt32(0x00002213))!)",
        "mlcp"                            : "\(UnicodeScalar(UInt32(0x00002ADB))!)",
        "mldr"                            : "\(UnicodeScalar(UInt32(0x00002026))!)",
        "mnplus"                          : "\(UnicodeScalar(UInt32(0x00002213))!)",
        "models"                          : "\(UnicodeScalar(UInt32(0x000022A7))!)",
        "Mopf"                            : "\(UnicodeScalar(UInt32(0x0001D544))!)",
        "mopf"                            : "\(UnicodeScalar(UInt32(0x0001D55E))!)",
        "mp"                              : "\(UnicodeScalar(UInt32(0x00002213))!)",
        "Mscr"                            : "\(UnicodeScalar(UInt32(0x00002133))!)",
        "mscr"                            : "\(UnicodeScalar(UInt32(0x0001D4C2))!)",
        "mstpos"                          : "\(UnicodeScalar(UInt32(0x0000223E))!)",
        "Mu"                              : "\(UnicodeScalar(UInt32(0x0000039C))!)",
        "mu"                              : "\(UnicodeScalar(UInt32(0x000003BC))!)",
        "multimap"                        : "\(UnicodeScalar(UInt32(0x000022B8))!)",
        "mumap"                           : "\(UnicodeScalar(UInt32(0x000022B8))!)",
        "nabla"                           : "\(UnicodeScalar(UInt32(0x00002207))!)",
        "Nacute"                          : "\(UnicodeScalar(UInt32(0x00000143))!)",
        "nacute"                          : "\(UnicodeScalar(UInt32(0x00000144))!)",
        "nang"                            : "\(UnicodeScalar(UInt32(0x00002220))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nap"                             : "\(UnicodeScalar(UInt32(0x00002249))!)",
        "napE"                            : "\(UnicodeScalar(UInt32(0x00002A70))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "napid"                           : "\(UnicodeScalar(UInt32(0x0000224B))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "napos"                           : "\(UnicodeScalar(UInt32(0x00000149))!)",
        "napprox"                         : "\(UnicodeScalar(UInt32(0x00002249))!)",
        "natur"                           : "\(UnicodeScalar(UInt32(0x0000266E))!)",
        "natural"                         : "\(UnicodeScalar(UInt32(0x0000266E))!)",
        "naturals"                        : "\(UnicodeScalar(UInt32(0x00002115))!)",
        "nbsp"                            : "\(UnicodeScalar(UInt32(0x000000A0))!)",
        "nbump"                           : "\(UnicodeScalar(UInt32(0x0000224E))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nbumpe"                          : "\(UnicodeScalar(UInt32(0x0000224F))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "ncap"                            : "\(UnicodeScalar(UInt32(0x00002A43))!)",
        "Ncaron"                          : "\(UnicodeScalar(UInt32(0x00000147))!)",
        "ncaron"                          : "\(UnicodeScalar(UInt32(0x00000148))!)",
        "Ncedil"                          : "\(UnicodeScalar(UInt32(0x00000145))!)",
        "ncedil"                          : "\(UnicodeScalar(UInt32(0x00000146))!)",
        "ncong"                           : "\(UnicodeScalar(UInt32(0x00002247))!)",
        "ncongdot"                        : "\(UnicodeScalar(UInt32(0x00002A6D))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "ncup"                            : "\(UnicodeScalar(UInt32(0x00002A42))!)",
        "Ncy"                             : "\(UnicodeScalar(UInt32(0x0000041D))!)",
        "ncy"                             : "\(UnicodeScalar(UInt32(0x0000043D))!)",
        "ndash"                           : "\(UnicodeScalar(UInt32(0x00002013))!)",
        "ne"                              : "\(UnicodeScalar(UInt32(0x00002260))!)",
        "nearhk"                          : "\(UnicodeScalar(UInt32(0x00002924))!)",
        "nearr"                           : "\(UnicodeScalar(UInt32(0x00002197))!)",
        "neArr"                           : "\(UnicodeScalar(UInt32(0x000021D7))!)",
        "nearrow"                         : "\(UnicodeScalar(UInt32(0x00002197))!)",
        "nedot"                           : "\(UnicodeScalar(UInt32(0x00002250))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NegativeMediumSpace"             : "\(UnicodeScalar(UInt32(0x0000200B))!)",
        "NegativeThickSpace"              : "\(UnicodeScalar(UInt32(0x0000200B))!)",
        "NegativeThinSpace"               : "\(UnicodeScalar(UInt32(0x0000200B))!)",
        "NegativeVeryThinSpace"           : "\(UnicodeScalar(UInt32(0x0000200B))!)",
        "nequiv"                          : "\(UnicodeScalar(UInt32(0x00002262))!)",
        "nesear"                          : "\(UnicodeScalar(UInt32(0x00002928))!)",
        "nesim"                           : "\(UnicodeScalar(UInt32(0x00002242))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NestedGreaterGreater"            : "\(UnicodeScalar(UInt32(0x0000226B))!)",
        "NestedLessLess"                  : "\(UnicodeScalar(UInt32(0x0000226A))!)",
        "NewLine"                         : "\(UnicodeScalar(UInt32(0x0000000A))!)",
        "nexist"                          : "\(UnicodeScalar(UInt32(0x00002204))!)",
        "nexists"                         : "\(UnicodeScalar(UInt32(0x00002204))!)",
        "Nfr"                             : "\(UnicodeScalar(UInt32(0x0001D511))!)",
        "nfr"                             : "\(UnicodeScalar(UInt32(0x0001D52B))!)",
        "nge"                             : "\(UnicodeScalar(UInt32(0x00002271))!)",
        "ngE"                             : "\(UnicodeScalar(UInt32(0x00002267))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "ngeq"                            : "\(UnicodeScalar(UInt32(0x00002271))!)",
        "ngeqq"                           : "\(UnicodeScalar(UInt32(0x00002267))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "ngeqslant"                       : "\(UnicodeScalar(UInt32(0x00002A7E))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nges"                            : "\(UnicodeScalar(UInt32(0x00002A7E))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nGg"                             : "\(UnicodeScalar(UInt32(0x000022D9))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "ngsim"                           : "\(UnicodeScalar(UInt32(0x00002275))!)",
        "ngt"                             : "\(UnicodeScalar(UInt32(0x0000226F))!)",
        "nGt"                             : "\(UnicodeScalar(UInt32(0x0000226B))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "ngtr"                            : "\(UnicodeScalar(UInt32(0x0000226F))!)",
        "nGtv"                            : "\(UnicodeScalar(UInt32(0x0000226B))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nharr"                           : "\(UnicodeScalar(UInt32(0x000021AE))!)",
        "nhArr"                           : "\(UnicodeScalar(UInt32(0x000021CE))!)",
        "nhpar"                           : "\(UnicodeScalar(UInt32(0x00002AF2))!)",
        "ni"                              : "\(UnicodeScalar(UInt32(0x0000220B))!)",
        "nis"                             : "\(UnicodeScalar(UInt32(0x000022FC))!)",
        "nisd"                            : "\(UnicodeScalar(UInt32(0x000022FA))!)",
        "niv"                             : "\(UnicodeScalar(UInt32(0x0000220B))!)",
        "NJcy"                            : "\(UnicodeScalar(UInt32(0x0000040A))!)",
        "njcy"                            : "\(UnicodeScalar(UInt32(0x0000045A))!)",
        "nlarr"                           : "\(UnicodeScalar(UInt32(0x0000219A))!)",
        "nlArr"                           : "\(UnicodeScalar(UInt32(0x000021CD))!)",
        "nldr"                            : "\(UnicodeScalar(UInt32(0x00002025))!)",
        "nle"                             : "\(UnicodeScalar(UInt32(0x00002270))!)",
        "nlE"                             : "\(UnicodeScalar(UInt32(0x00002266))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nleftarrow"                      : "\(UnicodeScalar(UInt32(0x0000219A))!)",
        "nLeftarrow"                      : "\(UnicodeScalar(UInt32(0x000021CD))!)",
        "nleftrightarrow"                 : "\(UnicodeScalar(UInt32(0x000021AE))!)",
        "nLeftrightarrow"                 : "\(UnicodeScalar(UInt32(0x000021CE))!)",
        "nleq"                            : "\(UnicodeScalar(UInt32(0x00002270))!)",
        "nleqq"                           : "\(UnicodeScalar(UInt32(0x00002266))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nleqslant"                       : "\(UnicodeScalar(UInt32(0x00002A7D))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nles"                            : "\(UnicodeScalar(UInt32(0x00002A7D))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nless"                           : "\(UnicodeScalar(UInt32(0x0000226E))!)",
        "nLl"                             : "\(UnicodeScalar(UInt32(0x000022D8))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nlsim"                           : "\(UnicodeScalar(UInt32(0x00002274))!)",
        "nlt"                             : "\(UnicodeScalar(UInt32(0x0000226E))!)",
        "nLt"                             : "\(UnicodeScalar(UInt32(0x0000226A))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nltri"                           : "\(UnicodeScalar(UInt32(0x000022EA))!)",
        "nltrie"                          : "\(UnicodeScalar(UInt32(0x000022EC))!)",
        "nLtv"                            : "\(UnicodeScalar(UInt32(0x0000226A))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nmid"                            : "\(UnicodeScalar(UInt32(0x00002224))!)",
        "NoBreak"                         : "\(UnicodeScalar(UInt32(0x00002060))!)",
        "NonBreakingSpace"                : "\(UnicodeScalar(UInt32(0x000000A0))!)",
        "Nopf"                            : "\(UnicodeScalar(UInt32(0x00002115))!)",
        "nopf"                            : "\(UnicodeScalar(UInt32(0x0001D55F))!)",
        "not"                             : "\(UnicodeScalar(UInt32(0x000000AC))!)",
        "Not"                             : "\(UnicodeScalar(UInt32(0x00002AEC))!)",
        "NotCongruent"                    : "\(UnicodeScalar(UInt32(0x00002262))!)",
        "NotCupCap"                       : "\(UnicodeScalar(UInt32(0x0000226D))!)",
        "NotDoubleVerticalBar"            : "\(UnicodeScalar(UInt32(0x00002226))!)",
        "NotElement"                      : "\(UnicodeScalar(UInt32(0x00002209))!)",
        "NotEqual"                        : "\(UnicodeScalar(UInt32(0x00002260))!)",
        "NotEqualTilde"                   : "\(UnicodeScalar(UInt32(0x00002242))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotExists"                       : "\(UnicodeScalar(UInt32(0x00002204))!)",
        "NotGreater"                      : "\(UnicodeScalar(UInt32(0x0000226F))!)",
        "NotGreaterEqual"                 : "\(UnicodeScalar(UInt32(0x00002271))!)",
        "NotGreaterFullEqual"             : "\(UnicodeScalar(UInt32(0x00002267))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotGreaterGreater"               : "\(UnicodeScalar(UInt32(0x0000226B))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotGreaterLess"                  : "\(UnicodeScalar(UInt32(0x00002279))!)",
        "NotGreaterSlantEqual"            : "\(UnicodeScalar(UInt32(0x00002A7E))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotGreaterTilde"                 : "\(UnicodeScalar(UInt32(0x00002275))!)",
        "NotHumpDownHump"                 : "\(UnicodeScalar(UInt32(0x0000224E))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotHumpEqual"                    : "\(UnicodeScalar(UInt32(0x0000224F))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "notin"                           : "\(UnicodeScalar(UInt32(0x00002209))!)",
        "notindot"                        : "\(UnicodeScalar(UInt32(0x000022F5))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "notinE"                          : "\(UnicodeScalar(UInt32(0x000022F9))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "notinva"                         : "\(UnicodeScalar(UInt32(0x00002209))!)",
        "notinvb"                         : "\(UnicodeScalar(UInt32(0x000022F7))!)",
        "notinvc"                         : "\(UnicodeScalar(UInt32(0x000022F6))!)",
        "NotLeftTriangle"                 : "\(UnicodeScalar(UInt32(0x000022EA))!)",
        "NotLeftTriangleBar"              : "\(UnicodeScalar(UInt32(0x000029CF))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotLeftTriangleEqual"            : "\(UnicodeScalar(UInt32(0x000022EC))!)",
        "NotLess"                         : "\(UnicodeScalar(UInt32(0x0000226E))!)",
        "NotLessEqual"                    : "\(UnicodeScalar(UInt32(0x00002270))!)",
        "NotLessGreater"                  : "\(UnicodeScalar(UInt32(0x00002278))!)",
        "NotLessLess"                     : "\(UnicodeScalar(UInt32(0x0000226A))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotLessSlantEqual"               : "\(UnicodeScalar(UInt32(0x00002A7D))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotLessTilde"                    : "\(UnicodeScalar(UInt32(0x00002274))!)",
        "NotNestedGreaterGreater"         : "\(UnicodeScalar(UInt32(0x00002AA2))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotNestedLessLess"               : "\(UnicodeScalar(UInt32(0x00002AA1))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "notni"                           : "\(UnicodeScalar(UInt32(0x0000220C))!)",
        "notniva"                         : "\(UnicodeScalar(UInt32(0x0000220C))!)",
        "notnivb"                         : "\(UnicodeScalar(UInt32(0x000022FE))!)",
        "notnivc"                         : "\(UnicodeScalar(UInt32(0x000022FD))!)",
        "NotPrecedes"                     : "\(UnicodeScalar(UInt32(0x00002280))!)",
        "NotPrecedesEqual"                : "\(UnicodeScalar(UInt32(0x00002AAF))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotPrecedesSlantEqual"           : "\(UnicodeScalar(UInt32(0x000022E0))!)",
        "NotReverseElement"               : "\(UnicodeScalar(UInt32(0x0000220C))!)",
        "NotRightTriangle"                : "\(UnicodeScalar(UInt32(0x000022EB))!)",
        "NotRightTriangleBar"             : "\(UnicodeScalar(UInt32(0x000029D0))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotRightTriangleEqual"           : "\(UnicodeScalar(UInt32(0x000022ED))!)",
        "NotSquareSubset"                 : "\(UnicodeScalar(UInt32(0x0000228F))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotSquareSubsetEqual"            : "\(UnicodeScalar(UInt32(0x000022E2))!)",
        "NotSquareSuperset"               : "\(UnicodeScalar(UInt32(0x00002290))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotSquareSupersetEqual"          : "\(UnicodeScalar(UInt32(0x000022E3))!)",
        "NotSubset"                       : "\(UnicodeScalar(UInt32(0x00002282))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "NotSubsetEqual"                  : "\(UnicodeScalar(UInt32(0x00002288))!)",
        "NotSucceeds"                     : "\(UnicodeScalar(UInt32(0x00002281))!)",
        "NotSucceedsEqual"                : "\(UnicodeScalar(UInt32(0x00002AB0))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotSucceedsSlantEqual"           : "\(UnicodeScalar(UInt32(0x000022E1))!)",
        "NotSucceedsTilde"                : "\(UnicodeScalar(UInt32(0x0000227F))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "NotSuperset"                     : "\(UnicodeScalar(UInt32(0x00002283))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "NotSupersetEqual"                : "\(UnicodeScalar(UInt32(0x00002289))!)",
        "NotTilde"                        : "\(UnicodeScalar(UInt32(0x00002241))!)",
        "NotTildeEqual"                   : "\(UnicodeScalar(UInt32(0x00002244))!)",
        "NotTildeFullEqual"               : "\(UnicodeScalar(UInt32(0x00002247))!)",
        "NotTildeTilde"                   : "\(UnicodeScalar(UInt32(0x00002249))!)",
        "NotVerticalBar"                  : "\(UnicodeScalar(UInt32(0x00002224))!)",
        "npar"                            : "\(UnicodeScalar(UInt32(0x00002226))!)",
        "nparallel"                       : "\(UnicodeScalar(UInt32(0x00002226))!)",
        "nparsl"                          : "\(UnicodeScalar(UInt32(0x00002AFD))!)\(UnicodeScalar(UInt32(0x000020E5))!)",
        "npart"                           : "\(UnicodeScalar(UInt32(0x00002202))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "npolint"                         : "\(UnicodeScalar(UInt32(0x00002A14))!)",
        "npr"                             : "\(UnicodeScalar(UInt32(0x00002280))!)",
        "nprcue"                          : "\(UnicodeScalar(UInt32(0x000022E0))!)",
        "npre"                            : "\(UnicodeScalar(UInt32(0x00002AAF))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nprec"                           : "\(UnicodeScalar(UInt32(0x00002280))!)",
        "npreceq"                         : "\(UnicodeScalar(UInt32(0x00002AAF))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nrarr"                           : "\(UnicodeScalar(UInt32(0x0000219B))!)",
        "nrArr"                           : "\(UnicodeScalar(UInt32(0x000021CF))!)",
        "nrarrc"                          : "\(UnicodeScalar(UInt32(0x00002933))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nrarrw"                          : "\(UnicodeScalar(UInt32(0x0000219D))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nrightarrow"                     : "\(UnicodeScalar(UInt32(0x0000219B))!)",
        "nRightarrow"                     : "\(UnicodeScalar(UInt32(0x000021CF))!)",
        "nrtri"                           : "\(UnicodeScalar(UInt32(0x000022EB))!)",
        "nrtrie"                          : "\(UnicodeScalar(UInt32(0x000022ED))!)",
        "nsc"                             : "\(UnicodeScalar(UInt32(0x00002281))!)",
        "nsccue"                          : "\(UnicodeScalar(UInt32(0x000022E1))!)",
        "nsce"                            : "\(UnicodeScalar(UInt32(0x00002AB0))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "Nscr"                            : "\(UnicodeScalar(UInt32(0x0001D4A9))!)",
        "nscr"                            : "\(UnicodeScalar(UInt32(0x0001D4C3))!)",
        "nshortmid"                       : "\(UnicodeScalar(UInt32(0x00002224))!)",
        "nshortparallel"                  : "\(UnicodeScalar(UInt32(0x00002226))!)",
        "nsim"                            : "\(UnicodeScalar(UInt32(0x00002241))!)",
        "nsime"                           : "\(UnicodeScalar(UInt32(0x00002244))!)",
        "nsimeq"                          : "\(UnicodeScalar(UInt32(0x00002244))!)",
        "nsmid"                           : "\(UnicodeScalar(UInt32(0x00002224))!)",
        "nspar"                           : "\(UnicodeScalar(UInt32(0x00002226))!)",
        "nsqsube"                         : "\(UnicodeScalar(UInt32(0x000022E2))!)",
        "nsqsupe"                         : "\(UnicodeScalar(UInt32(0x000022E3))!)",
        "nsub"                            : "\(UnicodeScalar(UInt32(0x00002284))!)",
        "nsube"                           : "\(UnicodeScalar(UInt32(0x00002288))!)",
        "nsubE"                           : "\(UnicodeScalar(UInt32(0x00002AC5))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nsubset"                         : "\(UnicodeScalar(UInt32(0x00002282))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nsubseteq"                       : "\(UnicodeScalar(UInt32(0x00002288))!)",
        "nsubseteqq"                      : "\(UnicodeScalar(UInt32(0x00002AC5))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nsucc"                           : "\(UnicodeScalar(UInt32(0x00002281))!)",
        "nsucceq"                         : "\(UnicodeScalar(UInt32(0x00002AB0))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nsup"                            : "\(UnicodeScalar(UInt32(0x00002285))!)",
        "nsupe"                           : "\(UnicodeScalar(UInt32(0x00002289))!)",
        "nsupE"                           : "\(UnicodeScalar(UInt32(0x00002AC6))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "nsupset"                         : "\(UnicodeScalar(UInt32(0x00002283))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nsupseteq"                       : "\(UnicodeScalar(UInt32(0x00002289))!)",
        "nsupseteqq"                      : "\(UnicodeScalar(UInt32(0x00002AC6))!)\(UnicodeScalar(UInt32(0x00000338))!)",
        "ntgl"                            : "\(UnicodeScalar(UInt32(0x00002279))!)",
        "Ntilde"                          : "\(UnicodeScalar(UInt32(0x000000D1))!)",
        "ntilde"                          : "\(UnicodeScalar(UInt32(0x000000F1))!)",
        "ntlg"                            : "\(UnicodeScalar(UInt32(0x00002278))!)",
        "ntriangleleft"                   : "\(UnicodeScalar(UInt32(0x000022EA))!)",
        "ntrianglelefteq"                 : "\(UnicodeScalar(UInt32(0x000022EC))!)",
        "ntriangleright"                  : "\(UnicodeScalar(UInt32(0x000022EB))!)",
        "ntrianglerighteq"                : "\(UnicodeScalar(UInt32(0x000022ED))!)",
        "Nu"                              : "\(UnicodeScalar(UInt32(0x0000039D))!)",
        "nu"                              : "\(UnicodeScalar(UInt32(0x000003BD))!)",
        "num"                             : "\(UnicodeScalar(UInt32(0x00000023))!)",
        "numero"                          : "\(UnicodeScalar(UInt32(0x00002116))!)",
        "numsp"                           : "\(UnicodeScalar(UInt32(0x00002007))!)",
        "nvap"                            : "\(UnicodeScalar(UInt32(0x0000224D))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nvdash"                          : "\(UnicodeScalar(UInt32(0x000022AC))!)",
        "nvDash"                          : "\(UnicodeScalar(UInt32(0x000022AD))!)",
        "nVdash"                          : "\(UnicodeScalar(UInt32(0x000022AE))!)",
        "nVDash"                          : "\(UnicodeScalar(UInt32(0x000022AF))!)",
        "nvge"                            : "\(UnicodeScalar(UInt32(0x00002265))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nvgt"                            : "\(UnicodeScalar(UInt32(0x0000003E))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nvHarr"                          : "\(UnicodeScalar(UInt32(0x00002904))!)",
        "nvinfin"                         : "\(UnicodeScalar(UInt32(0x000029DE))!)",
        "nvlArr"                          : "\(UnicodeScalar(UInt32(0x00002902))!)",
        "nvle"                            : "\(UnicodeScalar(UInt32(0x00002264))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nvlt"                            : "\(UnicodeScalar(UInt32(0x0000003C))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nvltrie"                         : "\(UnicodeScalar(UInt32(0x000022B4))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nvrArr"                          : "\(UnicodeScalar(UInt32(0x00002903))!)",
        "nvrtrie"                         : "\(UnicodeScalar(UInt32(0x000022B5))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nvsim"                           : "\(UnicodeScalar(UInt32(0x0000223C))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "nwarhk"                          : "\(UnicodeScalar(UInt32(0x00002923))!)",
        "nwarr"                           : "\(UnicodeScalar(UInt32(0x00002196))!)",
        "nwArr"                           : "\(UnicodeScalar(UInt32(0x000021D6))!)",
        "nwarrow"                         : "\(UnicodeScalar(UInt32(0x00002196))!)",
        "nwnear"                          : "\(UnicodeScalar(UInt32(0x00002927))!)",
        "Oacute"                          : "\(UnicodeScalar(UInt32(0x000000D3))!)",
        "oacute"                          : "\(UnicodeScalar(UInt32(0x000000F3))!)",
        "oast"                            : "\(UnicodeScalar(UInt32(0x0000229B))!)",
        "ocir"                            : "\(UnicodeScalar(UInt32(0x0000229A))!)",
        "Ocirc"                           : "\(UnicodeScalar(UInt32(0x000000D4))!)",
        "ocirc"                           : "\(UnicodeScalar(UInt32(0x000000F4))!)",
        "Ocy"                             : "\(UnicodeScalar(UInt32(0x0000041E))!)",
        "ocy"                             : "\(UnicodeScalar(UInt32(0x0000043E))!)",
        "odash"                           : "\(UnicodeScalar(UInt32(0x0000229D))!)",
        "Odblac"                          : "\(UnicodeScalar(UInt32(0x00000150))!)",
        "odblac"                          : "\(UnicodeScalar(UInt32(0x00000151))!)",
        "odiv"                            : "\(UnicodeScalar(UInt32(0x00002A38))!)",
        "odot"                            : "\(UnicodeScalar(UInt32(0x00002299))!)",
        "odsold"                          : "\(UnicodeScalar(UInt32(0x000029BC))!)",
        "OElig"                           : "\(UnicodeScalar(UInt32(0x00000152))!)",
        "oelig"                           : "\(UnicodeScalar(UInt32(0x00000153))!)",
        "ofcir"                           : "\(UnicodeScalar(UInt32(0x000029BF))!)",
        "Ofr"                             : "\(UnicodeScalar(UInt32(0x0001D512))!)",
        "ofr"                             : "\(UnicodeScalar(UInt32(0x0001D52C))!)",
        "ogon"                            : "\(UnicodeScalar(UInt32(0x000002DB))!)",
        "Ograve"                          : "\(UnicodeScalar(UInt32(0x000000D2))!)",
        "ograve"                          : "\(UnicodeScalar(UInt32(0x000000F2))!)",
        "ogt"                             : "\(UnicodeScalar(UInt32(0x000029C1))!)",
        "ohbar"                           : "\(UnicodeScalar(UInt32(0x000029B5))!)",
        "ohm"                             : "\(UnicodeScalar(UInt32(0x000003A9))!)",
        "oint"                            : "\(UnicodeScalar(UInt32(0x0000222E))!)",
        "olarr"                           : "\(UnicodeScalar(UInt32(0x000021BA))!)",
        "olcir"                           : "\(UnicodeScalar(UInt32(0x000029BE))!)",
        "olcross"                         : "\(UnicodeScalar(UInt32(0x000029BB))!)",
        "oline"                           : "\(UnicodeScalar(UInt32(0x0000203E))!)",
        "olt"                             : "\(UnicodeScalar(UInt32(0x000029C0))!)",
        "Omacr"                           : "\(UnicodeScalar(UInt32(0x0000014C))!)",
        "omacr"                           : "\(UnicodeScalar(UInt32(0x0000014D))!)",
        "Omega"                           : "\(UnicodeScalar(UInt32(0x000003A9))!)",
        "omega"                           : "\(UnicodeScalar(UInt32(0x000003C9))!)",
        "Omicron"                         : "\(UnicodeScalar(UInt32(0x0000039F))!)",
        "omicron"                         : "\(UnicodeScalar(UInt32(0x000003BF))!)",
        "omid"                            : "\(UnicodeScalar(UInt32(0x000029B6))!)",
        "ominus"                          : "\(UnicodeScalar(UInt32(0x00002296))!)",
        "Oopf"                            : "\(UnicodeScalar(UInt32(0x0001D546))!)",
        "oopf"                            : "\(UnicodeScalar(UInt32(0x0001D560))!)",
        "opar"                            : "\(UnicodeScalar(UInt32(0x000029B7))!)",
        "OpenCurlyDoubleQuote"            : "\(UnicodeScalar(UInt32(0x0000201C))!)",
        "OpenCurlyQuote"                  : "\(UnicodeScalar(UInt32(0x00002018))!)",
        "operp"                           : "\(UnicodeScalar(UInt32(0x000029B9))!)",
        "oplus"                           : "\(UnicodeScalar(UInt32(0x00002295))!)",
        "or"                              : "\(UnicodeScalar(UInt32(0x00002228))!)",
        "Or"                              : "\(UnicodeScalar(UInt32(0x00002A54))!)",
        "orarr"                           : "\(UnicodeScalar(UInt32(0x000021BB))!)",
        "ord"                             : "\(UnicodeScalar(UInt32(0x00002A5D))!)",
        "order"                           : "\(UnicodeScalar(UInt32(0x00002134))!)",
        "orderof"                         : "\(UnicodeScalar(UInt32(0x00002134))!)",
        "ordf"                            : "\(UnicodeScalar(UInt32(0x000000AA))!)",
        "ordm"                            : "\(UnicodeScalar(UInt32(0x000000BA))!)",
        "origof"                          : "\(UnicodeScalar(UInt32(0x000022B6))!)",
        "oror"                            : "\(UnicodeScalar(UInt32(0x00002A56))!)",
        "orslope"                         : "\(UnicodeScalar(UInt32(0x00002A57))!)",
        "orv"                             : "\(UnicodeScalar(UInt32(0x00002A5B))!)",
        "oS"                              : "\(UnicodeScalar(UInt32(0x000024C8))!)",
        "oscr"                            : "\(UnicodeScalar(UInt32(0x00002134))!)",
        "Oscr"                            : "\(UnicodeScalar(UInt32(0x0001D4AA))!)",
        "Oslash"                          : "\(UnicodeScalar(UInt32(0x000000D8))!)",
        "oslash"                          : "\(UnicodeScalar(UInt32(0x000000F8))!)",
        "osol"                            : "\(UnicodeScalar(UInt32(0x00002298))!)",
        "Otilde"                          : "\(UnicodeScalar(UInt32(0x000000D5))!)",
        "otilde"                          : "\(UnicodeScalar(UInt32(0x000000F5))!)",
        "otimes"                          : "\(UnicodeScalar(UInt32(0x00002297))!)",
        "Otimes"                          : "\(UnicodeScalar(UInt32(0x00002A37))!)",
        "otimesas"                        : "\(UnicodeScalar(UInt32(0x00002A36))!)",
        "Ouml"                            : "\(UnicodeScalar(UInt32(0x000000D6))!)",
        "ouml"                            : "\(UnicodeScalar(UInt32(0x000000F6))!)",
        "ovbar"                           : "\(UnicodeScalar(UInt32(0x0000233D))!)",
        "OverBar"                         : "\(UnicodeScalar(UInt32(0x0000203E))!)",
        "OverBrace"                       : "\(UnicodeScalar(UInt32(0x000023DE))!)",
        "OverBracket"                     : "\(UnicodeScalar(UInt32(0x000023B4))!)",
        "OverParenthesis"                 : "\(UnicodeScalar(UInt32(0x000023DC))!)",
        "par"                             : "\(UnicodeScalar(UInt32(0x00002225))!)",
        "para"                            : "\(UnicodeScalar(UInt32(0x000000B6))!)",
        "parallel"                        : "\(UnicodeScalar(UInt32(0x00002225))!)",
        "parsim"                          : "\(UnicodeScalar(UInt32(0x00002AF3))!)",
        "parsl"                           : "\(UnicodeScalar(UInt32(0x00002AFD))!)",
        "part"                            : "\(UnicodeScalar(UInt32(0x00002202))!)",
        "PartialD"                        : "\(UnicodeScalar(UInt32(0x00002202))!)",
        "Pcy"                             : "\(UnicodeScalar(UInt32(0x0000041F))!)",
        "pcy"                             : "\(UnicodeScalar(UInt32(0x0000043F))!)",
        "percnt"                          : "\(UnicodeScalar(UInt32(0x00000025))!)",
        "period"                          : "\(UnicodeScalar(UInt32(0x0000002E))!)",
        "permil"                          : "\(UnicodeScalar(UInt32(0x00002030))!)",
        "perp"                            : "\(UnicodeScalar(UInt32(0x000022A5))!)",
        "pertenk"                         : "\(UnicodeScalar(UInt32(0x00002031))!)",
        "Pfr"                             : "\(UnicodeScalar(UInt32(0x0001D513))!)",
        "pfr"                             : "\(UnicodeScalar(UInt32(0x0001D52D))!)",
        "Phi"                             : "\(UnicodeScalar(UInt32(0x000003A6))!)",
        "phi"                             : "\(UnicodeScalar(UInt32(0x000003C6))!)",
        "phiv"                            : "\(UnicodeScalar(UInt32(0x000003D5))!)",
        "phmmat"                          : "\(UnicodeScalar(UInt32(0x00002133))!)",
        "phone"                           : "\(UnicodeScalar(UInt32(0x0000260E))!)",
        "Pi"                              : "\(UnicodeScalar(UInt32(0x000003A0))!)",
        "pi"                              : "\(UnicodeScalar(UInt32(0x000003C0))!)",
        "pitchfork"                       : "\(UnicodeScalar(UInt32(0x000022D4))!)",
        "piv"                             : "\(UnicodeScalar(UInt32(0x000003D6))!)",
        "planck"                          : "\(UnicodeScalar(UInt32(0x0000210F))!)",
        "planckh"                         : "\(UnicodeScalar(UInt32(0x0000210E))!)",
        "plankv"                          : "\(UnicodeScalar(UInt32(0x0000210F))!)",
        "plus"                            : "\(UnicodeScalar(UInt32(0x0000002B))!)",
        "plusacir"                        : "\(UnicodeScalar(UInt32(0x00002A23))!)",
        "plusb"                           : "\(UnicodeScalar(UInt32(0x0000229E))!)",
        "pluscir"                         : "\(UnicodeScalar(UInt32(0x00002A22))!)",
        "plusdo"                          : "\(UnicodeScalar(UInt32(0x00002214))!)",
        "plusdu"                          : "\(UnicodeScalar(UInt32(0x00002A25))!)",
        "pluse"                           : "\(UnicodeScalar(UInt32(0x00002A72))!)",
        "PlusMinus"                       : "\(UnicodeScalar(UInt32(0x000000B1))!)",
        "plusmn"                          : "\(UnicodeScalar(UInt32(0x000000B1))!)",
        "plussim"                         : "\(UnicodeScalar(UInt32(0x00002A26))!)",
        "plustwo"                         : "\(UnicodeScalar(UInt32(0x00002A27))!)",
        "pm"                              : "\(UnicodeScalar(UInt32(0x000000B1))!)",
        "Poincareplane"                   : "\(UnicodeScalar(UInt32(0x0000210C))!)",
        "pointint"                        : "\(UnicodeScalar(UInt32(0x00002A15))!)",
        "Popf"                            : "\(UnicodeScalar(UInt32(0x00002119))!)",
        "popf"                            : "\(UnicodeScalar(UInt32(0x0001D561))!)",
        "pound"                           : "\(UnicodeScalar(UInt32(0x000000A3))!)",
        "pr"                              : "\(UnicodeScalar(UInt32(0x0000227A))!)",
        "Pr"                              : "\(UnicodeScalar(UInt32(0x00002ABB))!)",
        "prap"                            : "\(UnicodeScalar(UInt32(0x00002AB7))!)",
        "prcue"                           : "\(UnicodeScalar(UInt32(0x0000227C))!)",
        "pre"                             : "\(UnicodeScalar(UInt32(0x00002AAF))!)",
        "prE"                             : "\(UnicodeScalar(UInt32(0x00002AB3))!)",
        "prec"                            : "\(UnicodeScalar(UInt32(0x0000227A))!)",
        "precapprox"                      : "\(UnicodeScalar(UInt32(0x00002AB7))!)",
        "preccurlyeq"                     : "\(UnicodeScalar(UInt32(0x0000227C))!)",
        "Precedes"                        : "\(UnicodeScalar(UInt32(0x0000227A))!)",
        "PrecedesEqual"                   : "\(UnicodeScalar(UInt32(0x00002AAF))!)",
        "PrecedesSlantEqual"              : "\(UnicodeScalar(UInt32(0x0000227C))!)",
        "PrecedesTilde"                   : "\(UnicodeScalar(UInt32(0x0000227E))!)",
        "preceq"                          : "\(UnicodeScalar(UInt32(0x00002AAF))!)",
        "precnapprox"                     : "\(UnicodeScalar(UInt32(0x00002AB9))!)",
        "precneqq"                        : "\(UnicodeScalar(UInt32(0x00002AB5))!)",
        "precnsim"                        : "\(UnicodeScalar(UInt32(0x000022E8))!)",
        "precsim"                         : "\(UnicodeScalar(UInt32(0x0000227E))!)",
        "prime"                           : "\(UnicodeScalar(UInt32(0x00002032))!)",
        "Prime"                           : "\(UnicodeScalar(UInt32(0x00002033))!)",
        "primes"                          : "\(UnicodeScalar(UInt32(0x00002119))!)",
        "prnap"                           : "\(UnicodeScalar(UInt32(0x00002AB9))!)",
        "prnE"                            : "\(UnicodeScalar(UInt32(0x00002AB5))!)",
        "prnsim"                          : "\(UnicodeScalar(UInt32(0x000022E8))!)",
        "prod"                            : "\(UnicodeScalar(UInt32(0x0000220F))!)",
        "Product"                         : "\(UnicodeScalar(UInt32(0x0000220F))!)",
        "profalar"                        : "\(UnicodeScalar(UInt32(0x0000232E))!)",
        "profline"                        : "\(UnicodeScalar(UInt32(0x00002312))!)",
        "profsurf"                        : "\(UnicodeScalar(UInt32(0x00002313))!)",
        "prop"                            : "\(UnicodeScalar(UInt32(0x0000221D))!)",
        "Proportion"                      : "\(UnicodeScalar(UInt32(0x00002237))!)",
        "Proportional"                    : "\(UnicodeScalar(UInt32(0x0000221D))!)",
        "propto"                          : "\(UnicodeScalar(UInt32(0x0000221D))!)",
        "prsim"                           : "\(UnicodeScalar(UInt32(0x0000227E))!)",
        "prurel"                          : "\(UnicodeScalar(UInt32(0x000022B0))!)",
        "Pscr"                            : "\(UnicodeScalar(UInt32(0x0001D4AB))!)",
        "pscr"                            : "\(UnicodeScalar(UInt32(0x0001D4C5))!)",
        "Psi"                             : "\(UnicodeScalar(UInt32(0x000003A8))!)",
        "psi"                             : "\(UnicodeScalar(UInt32(0x000003C8))!)",
        "puncsp"                          : "\(UnicodeScalar(UInt32(0x00002008))!)",
        "Qfr"                             : "\(UnicodeScalar(UInt32(0x0001D514))!)",
        "qfr"                             : "\(UnicodeScalar(UInt32(0x0001D52E))!)",
        "qint"                            : "\(UnicodeScalar(UInt32(0x00002A0C))!)",
        "Qopf"                            : "\(UnicodeScalar(UInt32(0x0000211A))!)",
        "qopf"                            : "\(UnicodeScalar(UInt32(0x0001D562))!)",
        "qprime"                          : "\(UnicodeScalar(UInt32(0x00002057))!)",
        "Qscr"                            : "\(UnicodeScalar(UInt32(0x0001D4AC))!)",
        "qscr"                            : "\(UnicodeScalar(UInt32(0x0001D4C6))!)",
        "quaternions"                     : "\(UnicodeScalar(UInt32(0x0000210D))!)",
        "quatint"                         : "\(UnicodeScalar(UInt32(0x00002A16))!)",
        "quest"                           : "\(UnicodeScalar(UInt32(0x0000003F))!)",
        "questeq"                         : "\(UnicodeScalar(UInt32(0x0000225F))!)",
        "quot"                            : "\(UnicodeScalar(UInt32(0x00000022))!)",
        "QUOT"                            : "\(UnicodeScalar(UInt32(0x00000022))!)",
        "rAarr"                           : "\(UnicodeScalar(UInt32(0x000021DB))!)",
        "race"                            : "\(UnicodeScalar(UInt32(0x0000223D))!)\(UnicodeScalar(UInt32(0x00000331))!)",
        "Racute"                          : "\(UnicodeScalar(UInt32(0x00000154))!)",
        "racute"                          : "\(UnicodeScalar(UInt32(0x00000155))!)",
        "radic"                           : "\(UnicodeScalar(UInt32(0x0000221A))!)",
        "raemptyv"                        : "\(UnicodeScalar(UInt32(0x000029B3))!)",
        "rang"                            : "\(UnicodeScalar(UInt32(0x000027E9))!)",
        "Rang"                            : "\(UnicodeScalar(UInt32(0x000027EB))!)",
        "rangd"                           : "\(UnicodeScalar(UInt32(0x00002992))!)",
        "range"                           : "\(UnicodeScalar(UInt32(0x000029A5))!)",
        "rangle"                          : "\(UnicodeScalar(UInt32(0x000027E9))!)",
        "raquo"                           : "\(UnicodeScalar(UInt32(0x000000BB))!)",
        "rarr"                            : "\(UnicodeScalar(UInt32(0x00002192))!)",
        "Rarr"                            : "\(UnicodeScalar(UInt32(0x000021A0))!)",
        "rArr"                            : "\(UnicodeScalar(UInt32(0x000021D2))!)",
        "rarrap"                          : "\(UnicodeScalar(UInt32(0x00002975))!)",
        "rarrb"                           : "\(UnicodeScalar(UInt32(0x000021E5))!)",
        "rarrbfs"                         : "\(UnicodeScalar(UInt32(0x00002920))!)",
        "rarrc"                           : "\(UnicodeScalar(UInt32(0x00002933))!)",
        "rarrfs"                          : "\(UnicodeScalar(UInt32(0x0000291E))!)",
        "rarrhk"                          : "\(UnicodeScalar(UInt32(0x000021AA))!)",
        "rarrlp"                          : "\(UnicodeScalar(UInt32(0x000021AC))!)",
        "rarrpl"                          : "\(UnicodeScalar(UInt32(0x00002945))!)",
        "rarrsim"                         : "\(UnicodeScalar(UInt32(0x00002974))!)",
        "rarrtl"                          : "\(UnicodeScalar(UInt32(0x000021A3))!)",
        "Rarrtl"                          : "\(UnicodeScalar(UInt32(0x00002916))!)",
        "rarrw"                           : "\(UnicodeScalar(UInt32(0x0000219D))!)",
        "ratail"                          : "\(UnicodeScalar(UInt32(0x0000291A))!)",
        "rAtail"                          : "\(UnicodeScalar(UInt32(0x0000291C))!)",
        "ratio"                           : "\(UnicodeScalar(UInt32(0x00002236))!)",
        "rationals"                       : "\(UnicodeScalar(UInt32(0x0000211A))!)",
        "rbarr"                           : "\(UnicodeScalar(UInt32(0x0000290D))!)",
        "rBarr"                           : "\(UnicodeScalar(UInt32(0x0000290F))!)",
        "RBarr"                           : "\(UnicodeScalar(UInt32(0x00002910))!)",
        "rbbrk"                           : "\(UnicodeScalar(UInt32(0x00002773))!)",
        "rbrace"                          : "\(UnicodeScalar(UInt32(0x0000007D))!)",
        "rbrack"                          : "\(UnicodeScalar(UInt32(0x0000005D))!)",
        "rbrke"                           : "\(UnicodeScalar(UInt32(0x0000298C))!)",
        "rbrksld"                         : "\(UnicodeScalar(UInt32(0x0000298E))!)",
        "rbrkslu"                         : "\(UnicodeScalar(UInt32(0x00002990))!)",
        "Rcaron"                          : "\(UnicodeScalar(UInt32(0x00000158))!)",
        "rcaron"                          : "\(UnicodeScalar(UInt32(0x00000159))!)",
        "Rcedil"                          : "\(UnicodeScalar(UInt32(0x00000156))!)",
        "rcedil"                          : "\(UnicodeScalar(UInt32(0x00000157))!)",
        "rceil"                           : "\(UnicodeScalar(UInt32(0x00002309))!)",
        "rcub"                            : "\(UnicodeScalar(UInt32(0x0000007D))!)",
        "Rcy"                             : "\(UnicodeScalar(UInt32(0x00000420))!)",
        "rcy"                             : "\(UnicodeScalar(UInt32(0x00000440))!)",
        "rdca"                            : "\(UnicodeScalar(UInt32(0x00002937))!)",
        "rdldhar"                         : "\(UnicodeScalar(UInt32(0x00002969))!)",
        "rdquo"                           : "\(UnicodeScalar(UInt32(0x0000201D))!)",
        "rdquor"                          : "\(UnicodeScalar(UInt32(0x0000201D))!)",
        "rdsh"                            : "\(UnicodeScalar(UInt32(0x000021B3))!)",
        "Re"                              : "\(UnicodeScalar(UInt32(0x0000211C))!)",
        "real"                            : "\(UnicodeScalar(UInt32(0x0000211C))!)",
        "realine"                         : "\(UnicodeScalar(UInt32(0x0000211B))!)",
        "realpart"                        : "\(UnicodeScalar(UInt32(0x0000211C))!)",
        "reals"                           : "\(UnicodeScalar(UInt32(0x0000211D))!)",
        "rect"                            : "\(UnicodeScalar(UInt32(0x000025AD))!)",
        "reg"                             : "\(UnicodeScalar(UInt32(0x000000AE))!)",
        "REG"                             : "\(UnicodeScalar(UInt32(0x000000AE))!)",
        "ReverseElement"                  : "\(UnicodeScalar(UInt32(0x0000220B))!)",
        "ReverseEquilibrium"              : "\(UnicodeScalar(UInt32(0x000021CB))!)",
        "ReverseUpEquilibrium"            : "\(UnicodeScalar(UInt32(0x0000296F))!)",
        "rfisht"                          : "\(UnicodeScalar(UInt32(0x0000297D))!)",
        "rfloor"                          : "\(UnicodeScalar(UInt32(0x0000230B))!)",
        "Rfr"                             : "\(UnicodeScalar(UInt32(0x0000211C))!)",
        "rfr"                             : "\(UnicodeScalar(UInt32(0x0001D52F))!)",
        "rHar"                            : "\(UnicodeScalar(UInt32(0x00002964))!)",
        "rhard"                           : "\(UnicodeScalar(UInt32(0x000021C1))!)",
        "rharu"                           : "\(UnicodeScalar(UInt32(0x000021C0))!)",
        "rharul"                          : "\(UnicodeScalar(UInt32(0x0000296C))!)",
        "Rho"                             : "\(UnicodeScalar(UInt32(0x000003A1))!)",
        "rho"                             : "\(UnicodeScalar(UInt32(0x000003C1))!)",
        "rhov"                            : "\(UnicodeScalar(UInt32(0x000003F1))!)",
        "RightAngleBracket"               : "\(UnicodeScalar(UInt32(0x000027E9))!)",
        "rightarrow"                      : "\(UnicodeScalar(UInt32(0x00002192))!)",
        "RightArrow"                      : "\(UnicodeScalar(UInt32(0x00002192))!)",
        "Rightarrow"                      : "\(UnicodeScalar(UInt32(0x000021D2))!)",
        "RightArrowBar"                   : "\(UnicodeScalar(UInt32(0x000021E5))!)",
        "RightArrowLeftArrow"             : "\(UnicodeScalar(UInt32(0x000021C4))!)",
        "rightarrowtail"                  : "\(UnicodeScalar(UInt32(0x000021A3))!)",
        "RightCeiling"                    : "\(UnicodeScalar(UInt32(0x00002309))!)",
        "RightDoubleBracket"              : "\(UnicodeScalar(UInt32(0x000027E7))!)",
        "RightDownTeeVector"              : "\(UnicodeScalar(UInt32(0x0000295D))!)",
        "RightDownVector"                 : "\(UnicodeScalar(UInt32(0x000021C2))!)",
        "RightDownVectorBar"              : "\(UnicodeScalar(UInt32(0x00002955))!)",
        "RightFloor"                      : "\(UnicodeScalar(UInt32(0x0000230B))!)",
        "rightharpoondown"                : "\(UnicodeScalar(UInt32(0x000021C1))!)",
        "rightharpoonup"                  : "\(UnicodeScalar(UInt32(0x000021C0))!)",
        "rightleftarrows"                 : "\(UnicodeScalar(UInt32(0x000021C4))!)",
        "rightleftharpoons"               : "\(UnicodeScalar(UInt32(0x000021CC))!)",
        "rightrightarrows"                : "\(UnicodeScalar(UInt32(0x000021C9))!)",
        "rightsquigarrow"                 : "\(UnicodeScalar(UInt32(0x0000219D))!)",
        "RightTee"                        : "\(UnicodeScalar(UInt32(0x000022A2))!)",
        "RightTeeArrow"                   : "\(UnicodeScalar(UInt32(0x000021A6))!)",
        "RightTeeVector"                  : "\(UnicodeScalar(UInt32(0x0000295B))!)",
        "rightthreetimes"                 : "\(UnicodeScalar(UInt32(0x000022CC))!)",
        "RightTriangle"                   : "\(UnicodeScalar(UInt32(0x000022B3))!)",
        "RightTriangleBar"                : "\(UnicodeScalar(UInt32(0x000029D0))!)",
        "RightTriangleEqual"              : "\(UnicodeScalar(UInt32(0x000022B5))!)",
        "RightUpDownVector"               : "\(UnicodeScalar(UInt32(0x0000294F))!)",
        "RightUpTeeVector"                : "\(UnicodeScalar(UInt32(0x0000295C))!)",
        "RightUpVector"                   : "\(UnicodeScalar(UInt32(0x000021BE))!)",
        "RightUpVectorBar"                : "\(UnicodeScalar(UInt32(0x00002954))!)",
        "RightVector"                     : "\(UnicodeScalar(UInt32(0x000021C0))!)",
        "RightVectorBar"                  : "\(UnicodeScalar(UInt32(0x00002953))!)",
        "ring"                            : "\(UnicodeScalar(UInt32(0x000002DA))!)",
        "risingdotseq"                    : "\(UnicodeScalar(UInt32(0x00002253))!)",
        "rlarr"                           : "\(UnicodeScalar(UInt32(0x000021C4))!)",
        "rlhar"                           : "\(UnicodeScalar(UInt32(0x000021CC))!)",
        "rlm"                             : "\(UnicodeScalar(UInt32(0x0000200F))!)",
        "rmoust"                          : "\(UnicodeScalar(UInt32(0x000023B1))!)",
        "rmoustache"                      : "\(UnicodeScalar(UInt32(0x000023B1))!)",
        "rnmid"                           : "\(UnicodeScalar(UInt32(0x00002AEE))!)",
        "roang"                           : "\(UnicodeScalar(UInt32(0x000027ED))!)",
        "roarr"                           : "\(UnicodeScalar(UInt32(0x000021FE))!)",
        "robrk"                           : "\(UnicodeScalar(UInt32(0x000027E7))!)",
        "ropar"                           : "\(UnicodeScalar(UInt32(0x00002986))!)",
        "Ropf"                            : "\(UnicodeScalar(UInt32(0x0000211D))!)",
        "ropf"                            : "\(UnicodeScalar(UInt32(0x0001D563))!)",
        "roplus"                          : "\(UnicodeScalar(UInt32(0x00002A2E))!)",
        "rotimes"                         : "\(UnicodeScalar(UInt32(0x00002A35))!)",
        "RoundImplies"                    : "\(UnicodeScalar(UInt32(0x00002970))!)",
        "rpar"                            : "\(UnicodeScalar(UInt32(0x00000029))!)",
        "rpargt"                          : "\(UnicodeScalar(UInt32(0x00002994))!)",
        "rppolint"                        : "\(UnicodeScalar(UInt32(0x00002A12))!)",
        "rrarr"                           : "\(UnicodeScalar(UInt32(0x000021C9))!)",
        "Rrightarrow"                     : "\(UnicodeScalar(UInt32(0x000021DB))!)",
        "rsaquo"                          : "\(UnicodeScalar(UInt32(0x0000203A))!)",
        "Rscr"                            : "\(UnicodeScalar(UInt32(0x0000211B))!)",
        "rscr"                            : "\(UnicodeScalar(UInt32(0x0001D4C7))!)",
        "rsh"                             : "\(UnicodeScalar(UInt32(0x000021B1))!)",
        "Rsh"                             : "\(UnicodeScalar(UInt32(0x000021B1))!)",
        "rsqb"                            : "\(UnicodeScalar(UInt32(0x0000005D))!)",
        "rsquo"                           : "\(UnicodeScalar(UInt32(0x00002019))!)",
        "rsquor"                          : "\(UnicodeScalar(UInt32(0x00002019))!)",
        "rthree"                          : "\(UnicodeScalar(UInt32(0x000022CC))!)",
        "rtimes"                          : "\(UnicodeScalar(UInt32(0x000022CA))!)",
        "rtri"                            : "\(UnicodeScalar(UInt32(0x000025B9))!)",
        "rtrie"                           : "\(UnicodeScalar(UInt32(0x000022B5))!)",
        "rtrif"                           : "\(UnicodeScalar(UInt32(0x000025B8))!)",
        "rtriltri"                        : "\(UnicodeScalar(UInt32(0x000029CE))!)",
        "RuleDelayed"                     : "\(UnicodeScalar(UInt32(0x000029F4))!)",
        "ruluhar"                         : "\(UnicodeScalar(UInt32(0x00002968))!)",
        "rx"                              : "\(UnicodeScalar(UInt32(0x0000211E))!)",
        "Sacute"                          : "\(UnicodeScalar(UInt32(0x0000015A))!)",
        "sacute"                          : "\(UnicodeScalar(UInt32(0x0000015B))!)",
        "sbquo"                           : "\(UnicodeScalar(UInt32(0x0000201A))!)",
        "sc"                              : "\(UnicodeScalar(UInt32(0x0000227B))!)",
        "Sc"                              : "\(UnicodeScalar(UInt32(0x00002ABC))!)",
        "scap"                            : "\(UnicodeScalar(UInt32(0x00002AB8))!)",
        "Scaron"                          : "\(UnicodeScalar(UInt32(0x00000160))!)",
        "scaron"                          : "\(UnicodeScalar(UInt32(0x00000161))!)",
        "sccue"                           : "\(UnicodeScalar(UInt32(0x0000227D))!)",
        "sce"                             : "\(UnicodeScalar(UInt32(0x00002AB0))!)",
        "scE"                             : "\(UnicodeScalar(UInt32(0x00002AB4))!)",
        "Scedil"                          : "\(UnicodeScalar(UInt32(0x0000015E))!)",
        "scedil"                          : "\(UnicodeScalar(UInt32(0x0000015F))!)",
        "Scirc"                           : "\(UnicodeScalar(UInt32(0x0000015C))!)",
        "scirc"                           : "\(UnicodeScalar(UInt32(0x0000015D))!)",
        "scnap"                           : "\(UnicodeScalar(UInt32(0x00002ABA))!)",
        "scnE"                            : "\(UnicodeScalar(UInt32(0x00002AB6))!)",
        "scnsim"                          : "\(UnicodeScalar(UInt32(0x000022E9))!)",
        "scpolint"                        : "\(UnicodeScalar(UInt32(0x00002A13))!)",
        "scsim"                           : "\(UnicodeScalar(UInt32(0x0000227F))!)",
        "Scy"                             : "\(UnicodeScalar(UInt32(0x00000421))!)",
        "scy"                             : "\(UnicodeScalar(UInt32(0x00000441))!)",
        "sdot"                            : "\(UnicodeScalar(UInt32(0x000022C5))!)",
        "sdotb"                           : "\(UnicodeScalar(UInt32(0x000022A1))!)",
        "sdote"                           : "\(UnicodeScalar(UInt32(0x00002A66))!)",
        "searhk"                          : "\(UnicodeScalar(UInt32(0x00002925))!)",
        "searr"                           : "\(UnicodeScalar(UInt32(0x00002198))!)",
        "seArr"                           : "\(UnicodeScalar(UInt32(0x000021D8))!)",
        "searrow"                         : "\(UnicodeScalar(UInt32(0x00002198))!)",
        "sect"                            : "\(UnicodeScalar(UInt32(0x000000A7))!)",
        "semi"                            : "\(UnicodeScalar(UInt32(0x0000003B))!)",
        "seswar"                          : "\(UnicodeScalar(UInt32(0x00002929))!)",
        "setminus"                        : "\(UnicodeScalar(UInt32(0x00002216))!)",
        "setmn"                           : "\(UnicodeScalar(UInt32(0x00002216))!)",
        "sext"                            : "\(UnicodeScalar(UInt32(0x00002736))!)",
        "Sfr"                             : "\(UnicodeScalar(UInt32(0x0001D516))!)",
        "sfr"                             : "\(UnicodeScalar(UInt32(0x0001D530))!)",
        "sfrown"                          : "\(UnicodeScalar(UInt32(0x00002322))!)",
        "sharp"                           : "\(UnicodeScalar(UInt32(0x0000266F))!)",
        "SHCHcy"                          : "\(UnicodeScalar(UInt32(0x00000429))!)",
        "shchcy"                          : "\(UnicodeScalar(UInt32(0x00000449))!)",
        "SHcy"                            : "\(UnicodeScalar(UInt32(0x00000428))!)",
        "shcy"                            : "\(UnicodeScalar(UInt32(0x00000448))!)",
        "ShortDownArrow"                  : "\(UnicodeScalar(UInt32(0x00002193))!)",
        "ShortLeftArrow"                  : "\(UnicodeScalar(UInt32(0x00002190))!)",
        "shortmid"                        : "\(UnicodeScalar(UInt32(0x00002223))!)",
        "shortparallel"                   : "\(UnicodeScalar(UInt32(0x00002225))!)",
        "ShortRightArrow"                 : "\(UnicodeScalar(UInt32(0x00002192))!)",
        "ShortUpArrow"                    : "\(UnicodeScalar(UInt32(0x00002191))!)",
        "shy"                             : "\(UnicodeScalar(UInt32(0x000000AD))!)",
        "Sigma"                           : "\(UnicodeScalar(UInt32(0x000003A3))!)",
        "sigma"                           : "\(UnicodeScalar(UInt32(0x000003C3))!)",
        "sigmaf"                          : "\(UnicodeScalar(UInt32(0x000003C2))!)",
        "sigmav"                          : "\(UnicodeScalar(UInt32(0x000003C2))!)",
        "sim"                             : "\(UnicodeScalar(UInt32(0x0000223C))!)",
        "simdot"                          : "\(UnicodeScalar(UInt32(0x00002A6A))!)",
        "sime"                            : "\(UnicodeScalar(UInt32(0x00002243))!)",
        "simeq"                           : "\(UnicodeScalar(UInt32(0x00002243))!)",
        "simg"                            : "\(UnicodeScalar(UInt32(0x00002A9E))!)",
        "simgE"                           : "\(UnicodeScalar(UInt32(0x00002AA0))!)",
        "siml"                            : "\(UnicodeScalar(UInt32(0x00002A9D))!)",
        "simlE"                           : "\(UnicodeScalar(UInt32(0x00002A9F))!)",
        "simne"                           : "\(UnicodeScalar(UInt32(0x00002246))!)",
        "simplus"                         : "\(UnicodeScalar(UInt32(0x00002A24))!)",
        "simrarr"                         : "\(UnicodeScalar(UInt32(0x00002972))!)",
        "slarr"                           : "\(UnicodeScalar(UInt32(0x00002190))!)",
        "SmallCircle"                     : "\(UnicodeScalar(UInt32(0x00002218))!)",
        "smallsetminus"                   : "\(UnicodeScalar(UInt32(0x00002216))!)",
        "smashp"                          : "\(UnicodeScalar(UInt32(0x00002A33))!)",
        "smeparsl"                        : "\(UnicodeScalar(UInt32(0x000029E4))!)",
        "smid"                            : "\(UnicodeScalar(UInt32(0x00002223))!)",
        "smile"                           : "\(UnicodeScalar(UInt32(0x00002323))!)",
        "smt"                             : "\(UnicodeScalar(UInt32(0x00002AAA))!)",
        "smte"                            : "\(UnicodeScalar(UInt32(0x00002AAC))!)",
        "smtes"                           : "\(UnicodeScalar(UInt32(0x00002AAC))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "SOFTcy"                          : "\(UnicodeScalar(UInt32(0x0000042C))!)",
        "softcy"                          : "\(UnicodeScalar(UInt32(0x0000044C))!)",
        "sol"                             : "\(UnicodeScalar(UInt32(0x0000002F))!)",
        "solb"                            : "\(UnicodeScalar(UInt32(0x000029C4))!)",
        "solbar"                          : "\(UnicodeScalar(UInt32(0x0000233F))!)",
        "Sopf"                            : "\(UnicodeScalar(UInt32(0x0001D54A))!)",
        "sopf"                            : "\(UnicodeScalar(UInt32(0x0001D564))!)",
        "spades"                          : "\(UnicodeScalar(UInt32(0x00002660))!)",
        "spadesuit"                       : "\(UnicodeScalar(UInt32(0x00002660))!)",
        "spar"                            : "\(UnicodeScalar(UInt32(0x00002225))!)",
        "sqcap"                           : "\(UnicodeScalar(UInt32(0x00002293))!)",
        "sqcaps"                          : "\(UnicodeScalar(UInt32(0x00002293))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "sqcup"                           : "\(UnicodeScalar(UInt32(0x00002294))!)",
        "sqcups"                          : "\(UnicodeScalar(UInt32(0x00002294))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "Sqrt"                            : "\(UnicodeScalar(UInt32(0x0000221A))!)",
        "sqsub"                           : "\(UnicodeScalar(UInt32(0x0000228F))!)",
        "sqsube"                          : "\(UnicodeScalar(UInt32(0x00002291))!)",
        "sqsubset"                        : "\(UnicodeScalar(UInt32(0x0000228F))!)",
        "sqsubseteq"                      : "\(UnicodeScalar(UInt32(0x00002291))!)",
        "sqsup"                           : "\(UnicodeScalar(UInt32(0x00002290))!)",
        "sqsupe"                          : "\(UnicodeScalar(UInt32(0x00002292))!)",
        "sqsupset"                        : "\(UnicodeScalar(UInt32(0x00002290))!)",
        "sqsupseteq"                      : "\(UnicodeScalar(UInt32(0x00002292))!)",
        "squ"                             : "\(UnicodeScalar(UInt32(0x000025A1))!)",
        "square"                          : "\(UnicodeScalar(UInt32(0x000025A1))!)",
        "Square"                          : "\(UnicodeScalar(UInt32(0x000025A1))!)",
        "SquareIntersection"              : "\(UnicodeScalar(UInt32(0x00002293))!)",
        "SquareSubset"                    : "\(UnicodeScalar(UInt32(0x0000228F))!)",
        "SquareSubsetEqual"               : "\(UnicodeScalar(UInt32(0x00002291))!)",
        "SquareSuperset"                  : "\(UnicodeScalar(UInt32(0x00002290))!)",
        "SquareSupersetEqual"             : "\(UnicodeScalar(UInt32(0x00002292))!)",
        "SquareUnion"                     : "\(UnicodeScalar(UInt32(0x00002294))!)",
        "squarf"                          : "\(UnicodeScalar(UInt32(0x000025AA))!)",
        "squf"                            : "\(UnicodeScalar(UInt32(0x000025AA))!)",
        "srarr"                           : "\(UnicodeScalar(UInt32(0x00002192))!)",
        "Sscr"                            : "\(UnicodeScalar(UInt32(0x0001D4AE))!)",
        "sscr"                            : "\(UnicodeScalar(UInt32(0x0001D4C8))!)",
        "ssetmn"                          : "\(UnicodeScalar(UInt32(0x00002216))!)",
        "ssmile"                          : "\(UnicodeScalar(UInt32(0x00002323))!)",
        "sstarf"                          : "\(UnicodeScalar(UInt32(0x000022C6))!)",
        "Star"                            : "\(UnicodeScalar(UInt32(0x000022C6))!)",
        "star"                            : "\(UnicodeScalar(UInt32(0x00002606))!)",
        "starf"                           : "\(UnicodeScalar(UInt32(0x00002605))!)",
        "straightepsilon"                 : "\(UnicodeScalar(UInt32(0x000003F5))!)",
        "straightphi"                     : "\(UnicodeScalar(UInt32(0x000003D5))!)",
        "strns"                           : "\(UnicodeScalar(UInt32(0x000000AF))!)",
        "sub"                             : "\(UnicodeScalar(UInt32(0x00002282))!)",
        "Sub"                             : "\(UnicodeScalar(UInt32(0x000022D0))!)",
        "subdot"                          : "\(UnicodeScalar(UInt32(0x00002ABD))!)",
        "sube"                            : "\(UnicodeScalar(UInt32(0x00002286))!)",
        "subE"                            : "\(UnicodeScalar(UInt32(0x00002AC5))!)",
        "subedot"                         : "\(UnicodeScalar(UInt32(0x00002AC3))!)",
        "submult"                         : "\(UnicodeScalar(UInt32(0x00002AC1))!)",
        "subne"                           : "\(UnicodeScalar(UInt32(0x0000228A))!)",
        "subnE"                           : "\(UnicodeScalar(UInt32(0x00002ACB))!)",
        "subplus"                         : "\(UnicodeScalar(UInt32(0x00002ABF))!)",
        "subrarr"                         : "\(UnicodeScalar(UInt32(0x00002979))!)",
        "subset"                          : "\(UnicodeScalar(UInt32(0x00002282))!)",
        "Subset"                          : "\(UnicodeScalar(UInt32(0x000022D0))!)",
        "subseteq"                        : "\(UnicodeScalar(UInt32(0x00002286))!)",
        "subseteqq"                       : "\(UnicodeScalar(UInt32(0x00002AC5))!)",
        "SubsetEqual"                     : "\(UnicodeScalar(UInt32(0x00002286))!)",
        "subsetneq"                       : "\(UnicodeScalar(UInt32(0x0000228A))!)",
        "subsetneqq"                      : "\(UnicodeScalar(UInt32(0x00002ACB))!)",
        "subsim"                          : "\(UnicodeScalar(UInt32(0x00002AC7))!)",
        "subsub"                          : "\(UnicodeScalar(UInt32(0x00002AD5))!)",
        "subsup"                          : "\(UnicodeScalar(UInt32(0x00002AD3))!)",
        "succ"                            : "\(UnicodeScalar(UInt32(0x0000227B))!)",
        "succapprox"                      : "\(UnicodeScalar(UInt32(0x00002AB8))!)",
        "succcurlyeq"                     : "\(UnicodeScalar(UInt32(0x0000227D))!)",
        "Succeeds"                        : "\(UnicodeScalar(UInt32(0x0000227B))!)",
        "SucceedsEqual"                   : "\(UnicodeScalar(UInt32(0x00002AB0))!)",
        "SucceedsSlantEqual"              : "\(UnicodeScalar(UInt32(0x0000227D))!)",
        "SucceedsTilde"                   : "\(UnicodeScalar(UInt32(0x0000227F))!)",
        "succeq"                          : "\(UnicodeScalar(UInt32(0x00002AB0))!)",
        "succnapprox"                     : "\(UnicodeScalar(UInt32(0x00002ABA))!)",
        "succneqq"                        : "\(UnicodeScalar(UInt32(0x00002AB6))!)",
        "succnsim"                        : "\(UnicodeScalar(UInt32(0x000022E9))!)",
        "succsim"                         : "\(UnicodeScalar(UInt32(0x0000227F))!)",
        "SuchThat"                        : "\(UnicodeScalar(UInt32(0x0000220B))!)",
        "sum"                             : "\(UnicodeScalar(UInt32(0x00002211))!)",
        "Sum"                             : "\(UnicodeScalar(UInt32(0x00002211))!)",
        "sung"                            : "\(UnicodeScalar(UInt32(0x0000266A))!)",
        "sup"                             : "\(UnicodeScalar(UInt32(0x00002283))!)",
        "Sup"                             : "\(UnicodeScalar(UInt32(0x000022D1))!)",
        "sup1"                            : "\(UnicodeScalar(UInt32(0x000000B9))!)",
        "sup2"                            : "\(UnicodeScalar(UInt32(0x000000B2))!)",
        "sup3"                            : "\(UnicodeScalar(UInt32(0x000000B3))!)",
        "supdot"                          : "\(UnicodeScalar(UInt32(0x00002ABE))!)",
        "supdsub"                         : "\(UnicodeScalar(UInt32(0x00002AD8))!)",
        "supe"                            : "\(UnicodeScalar(UInt32(0x00002287))!)",
        "supE"                            : "\(UnicodeScalar(UInt32(0x00002AC6))!)",
        "supedot"                         : "\(UnicodeScalar(UInt32(0x00002AC4))!)",
        "Superset"                        : "\(UnicodeScalar(UInt32(0x00002283))!)",
        "SupersetEqual"                   : "\(UnicodeScalar(UInt32(0x00002287))!)",
        "suphsol"                         : "\(UnicodeScalar(UInt32(0x000027C9))!)",
        "suphsub"                         : "\(UnicodeScalar(UInt32(0x00002AD7))!)",
        "suplarr"                         : "\(UnicodeScalar(UInt32(0x0000297B))!)",
        "supmult"                         : "\(UnicodeScalar(UInt32(0x00002AC2))!)",
        "supne"                           : "\(UnicodeScalar(UInt32(0x0000228B))!)",
        "supnE"                           : "\(UnicodeScalar(UInt32(0x00002ACC))!)",
        "supplus"                         : "\(UnicodeScalar(UInt32(0x00002AC0))!)",
        "supset"                          : "\(UnicodeScalar(UInt32(0x00002283))!)",
        "Supset"                          : "\(UnicodeScalar(UInt32(0x000022D1))!)",
        "supseteq"                        : "\(UnicodeScalar(UInt32(0x00002287))!)",
        "supseteqq"                       : "\(UnicodeScalar(UInt32(0x00002AC6))!)",
        "supsetneq"                       : "\(UnicodeScalar(UInt32(0x0000228B))!)",
        "supsetneqq"                      : "\(UnicodeScalar(UInt32(0x00002ACC))!)",
        "supsim"                          : "\(UnicodeScalar(UInt32(0x00002AC8))!)",
        "supsub"                          : "\(UnicodeScalar(UInt32(0x00002AD4))!)",
        "supsup"                          : "\(UnicodeScalar(UInt32(0x00002AD6))!)",
        "swarhk"                          : "\(UnicodeScalar(UInt32(0x00002926))!)",
        "swarr"                           : "\(UnicodeScalar(UInt32(0x00002199))!)",
        "swArr"                           : "\(UnicodeScalar(UInt32(0x000021D9))!)",
        "swarrow"                         : "\(UnicodeScalar(UInt32(0x00002199))!)",
        "swnwar"                          : "\(UnicodeScalar(UInt32(0x0000292A))!)",
        "szlig"                           : "\(UnicodeScalar(UInt32(0x000000DF))!)",
        "Tab"                             : "\(UnicodeScalar(UInt32(0x00000009))!)",
        "target"                          : "\(UnicodeScalar(UInt32(0x00002316))!)",
        "Tau"                             : "\(UnicodeScalar(UInt32(0x000003A4))!)",
        "tau"                             : "\(UnicodeScalar(UInt32(0x000003C4))!)",
        "tbrk"                            : "\(UnicodeScalar(UInt32(0x000023B4))!)",
        "Tcaron"                          : "\(UnicodeScalar(UInt32(0x00000164))!)",
        "tcaron"                          : "\(UnicodeScalar(UInt32(0x00000165))!)",
        "Tcedil"                          : "\(UnicodeScalar(UInt32(0x00000162))!)",
        "tcedil"                          : "\(UnicodeScalar(UInt32(0x00000163))!)",
        "Tcy"                             : "\(UnicodeScalar(UInt32(0x00000422))!)",
        "tcy"                             : "\(UnicodeScalar(UInt32(0x00000442))!)",
        "tdot"                            : "\(UnicodeScalar(UInt32(0x000020DB))!)",
        "telrec"                          : "\(UnicodeScalar(UInt32(0x00002315))!)",
        "Tfr"                             : "\(UnicodeScalar(UInt32(0x0001D517))!)",
        "tfr"                             : "\(UnicodeScalar(UInt32(0x0001D531))!)",
        "there4"                          : "\(UnicodeScalar(UInt32(0x00002234))!)",
        "therefore"                       : "\(UnicodeScalar(UInt32(0x00002234))!)",
        "Therefore"                       : "\(UnicodeScalar(UInt32(0x00002234))!)",
        "Theta"                           : "\(UnicodeScalar(UInt32(0x00000398))!)",
        "theta"                           : "\(UnicodeScalar(UInt32(0x000003B8))!)",
        "thetasym"                        : "\(UnicodeScalar(UInt32(0x000003D1))!)",
        "thetav"                          : "\(UnicodeScalar(UInt32(0x000003D1))!)",
        "thickapprox"                     : "\(UnicodeScalar(UInt32(0x00002248))!)",
        "thicksim"                        : "\(UnicodeScalar(UInt32(0x0000223C))!)",
        "ThickSpace"                      : "\(UnicodeScalar(UInt32(0x0000205F))!)\(UnicodeScalar(UInt32(0x0000200A))!)",
        "thinsp"                          : "\(UnicodeScalar(UInt32(0x00002009))!)",
        "ThinSpace"                       : "\(UnicodeScalar(UInt32(0x00002009))!)",
        "thkap"                           : "\(UnicodeScalar(UInt32(0x00002248))!)",
        "thksim"                          : "\(UnicodeScalar(UInt32(0x0000223C))!)",
        "THORN"                           : "\(UnicodeScalar(UInt32(0x000000DE))!)",
        "thorn"                           : "\(UnicodeScalar(UInt32(0x000000FE))!)",
        "tilde"                           : "\(UnicodeScalar(UInt32(0x000002DC))!)",
        "Tilde"                           : "\(UnicodeScalar(UInt32(0x0000223C))!)",
        "TildeEqual"                      : "\(UnicodeScalar(UInt32(0x00002243))!)",
        "TildeFullEqual"                  : "\(UnicodeScalar(UInt32(0x00002245))!)",
        "TildeTilde"                      : "\(UnicodeScalar(UInt32(0x00002248))!)",
        "times"                           : "\(UnicodeScalar(UInt32(0x000000D7))!)",
        "timesb"                          : "\(UnicodeScalar(UInt32(0x000022A0))!)",
        "timesbar"                        : "\(UnicodeScalar(UInt32(0x00002A31))!)",
        "timesd"                          : "\(UnicodeScalar(UInt32(0x00002A30))!)",
        "tint"                            : "\(UnicodeScalar(UInt32(0x0000222D))!)",
        "toea"                            : "\(UnicodeScalar(UInt32(0x00002928))!)",
        "top"                             : "\(UnicodeScalar(UInt32(0x000022A4))!)",
        "topbot"                          : "\(UnicodeScalar(UInt32(0x00002336))!)",
        "topcir"                          : "\(UnicodeScalar(UInt32(0x00002AF1))!)",
        "Topf"                            : "\(UnicodeScalar(UInt32(0x0001D54B))!)",
        "topf"                            : "\(UnicodeScalar(UInt32(0x0001D565))!)",
        "topfork"                         : "\(UnicodeScalar(UInt32(0x00002ADA))!)",
        "tosa"                            : "\(UnicodeScalar(UInt32(0x00002929))!)",
        "tprime"                          : "\(UnicodeScalar(UInt32(0x00002034))!)",
        "trade"                           : "\(UnicodeScalar(UInt32(0x00002122))!)",
        "TRADE"                           : "\(UnicodeScalar(UInt32(0x00002122))!)",
        "triangle"                        : "\(UnicodeScalar(UInt32(0x000025B5))!)",
        "triangledown"                    : "\(UnicodeScalar(UInt32(0x000025BF))!)",
        "triangleleft"                    : "\(UnicodeScalar(UInt32(0x000025C3))!)",
        "trianglelefteq"                  : "\(UnicodeScalar(UInt32(0x000022B4))!)",
        "triangleq"                       : "\(UnicodeScalar(UInt32(0x0000225C))!)",
        "triangleright"                   : "\(UnicodeScalar(UInt32(0x000025B9))!)",
        "trianglerighteq"                 : "\(UnicodeScalar(UInt32(0x000022B5))!)",
        "tridot"                          : "\(UnicodeScalar(UInt32(0x000025EC))!)",
        "trie"                            : "\(UnicodeScalar(UInt32(0x0000225C))!)",
        "triminus"                        : "\(UnicodeScalar(UInt32(0x00002A3A))!)",
        "TripleDot"                       : "\(UnicodeScalar(UInt32(0x000020DB))!)",
        "triplus"                         : "\(UnicodeScalar(UInt32(0x00002A39))!)",
        "trisb"                           : "\(UnicodeScalar(UInt32(0x000029CD))!)",
        "tritime"                         : "\(UnicodeScalar(UInt32(0x00002A3B))!)",
        "trpezium"                        : "\(UnicodeScalar(UInt32(0x000023E2))!)",
        "Tscr"                            : "\(UnicodeScalar(UInt32(0x0001D4AF))!)",
        "tscr"                            : "\(UnicodeScalar(UInt32(0x0001D4C9))!)",
        "TScy"                            : "\(UnicodeScalar(UInt32(0x00000426))!)",
        "tscy"                            : "\(UnicodeScalar(UInt32(0x00000446))!)",
        "TSHcy"                           : "\(UnicodeScalar(UInt32(0x0000040B))!)",
        "tshcy"                           : "\(UnicodeScalar(UInt32(0x0000045B))!)",
        "Tstrok"                          : "\(UnicodeScalar(UInt32(0x00000166))!)",
        "tstrok"                          : "\(UnicodeScalar(UInt32(0x00000167))!)",
        "twixt"                           : "\(UnicodeScalar(UInt32(0x0000226C))!)",
        "twoheadleftarrow"                : "\(UnicodeScalar(UInt32(0x0000219E))!)",
        "twoheadrightarrow"               : "\(UnicodeScalar(UInt32(0x000021A0))!)",
        "Uacute"                          : "\(UnicodeScalar(UInt32(0x000000DA))!)",
        "uacute"                          : "\(UnicodeScalar(UInt32(0x000000FA))!)",
        "uarr"                            : "\(UnicodeScalar(UInt32(0x00002191))!)",
        "Uarr"                            : "\(UnicodeScalar(UInt32(0x0000219F))!)",
        "uArr"                            : "\(UnicodeScalar(UInt32(0x000021D1))!)",
        "Uarrocir"                        : "\(UnicodeScalar(UInt32(0x00002949))!)",
        "Ubrcy"                           : "\(UnicodeScalar(UInt32(0x0000040E))!)",
        "ubrcy"                           : "\(UnicodeScalar(UInt32(0x0000045E))!)",
        "Ubreve"                          : "\(UnicodeScalar(UInt32(0x0000016C))!)",
        "ubreve"                          : "\(UnicodeScalar(UInt32(0x0000016D))!)",
        "Ucirc"                           : "\(UnicodeScalar(UInt32(0x000000DB))!)",
        "ucirc"                           : "\(UnicodeScalar(UInt32(0x000000FB))!)",
        "Ucy"                             : "\(UnicodeScalar(UInt32(0x00000423))!)",
        "ucy"                             : "\(UnicodeScalar(UInt32(0x00000443))!)",
        "udarr"                           : "\(UnicodeScalar(UInt32(0x000021C5))!)",
        "Udblac"                          : "\(UnicodeScalar(UInt32(0x00000170))!)",
        "udblac"                          : "\(UnicodeScalar(UInt32(0x00000171))!)",
        "udhar"                           : "\(UnicodeScalar(UInt32(0x0000296E))!)",
        "ufisht"                          : "\(UnicodeScalar(UInt32(0x0000297E))!)",
        "Ufr"                             : "\(UnicodeScalar(UInt32(0x0001D518))!)",
        "ufr"                             : "\(UnicodeScalar(UInt32(0x0001D532))!)",
        "Ugrave"                          : "\(UnicodeScalar(UInt32(0x000000D9))!)",
        "ugrave"                          : "\(UnicodeScalar(UInt32(0x000000F9))!)",
        "uHar"                            : "\(UnicodeScalar(UInt32(0x00002963))!)",
        "uharl"                           : "\(UnicodeScalar(UInt32(0x000021BF))!)",
        "uharr"                           : "\(UnicodeScalar(UInt32(0x000021BE))!)",
        "uhblk"                           : "\(UnicodeScalar(UInt32(0x00002580))!)",
        "ulcorn"                          : "\(UnicodeScalar(UInt32(0x0000231C))!)",
        "ulcorner"                        : "\(UnicodeScalar(UInt32(0x0000231C))!)",
        "ulcrop"                          : "\(UnicodeScalar(UInt32(0x0000230F))!)",
        "ultri"                           : "\(UnicodeScalar(UInt32(0x000025F8))!)",
        "Umacr"                           : "\(UnicodeScalar(UInt32(0x0000016A))!)",
        "umacr"                           : "\(UnicodeScalar(UInt32(0x0000016B))!)",
        "uml"                             : "\(UnicodeScalar(UInt32(0x000000A8))!)",
        "UnderBar"                        : "\(UnicodeScalar(UInt32(0x0000005F))!)",
        "UnderBrace"                      : "\(UnicodeScalar(UInt32(0x000023DF))!)",
        "UnderBracket"                    : "\(UnicodeScalar(UInt32(0x000023B5))!)",
        "UnderParenthesis"                : "\(UnicodeScalar(UInt32(0x000023DD))!)",
        "Union"                           : "\(UnicodeScalar(UInt32(0x000022C3))!)",
        "UnionPlus"                       : "\(UnicodeScalar(UInt32(0x0000228E))!)",
        "Uogon"                           : "\(UnicodeScalar(UInt32(0x00000172))!)",
        "uogon"                           : "\(UnicodeScalar(UInt32(0x00000173))!)",
        "Uopf"                            : "\(UnicodeScalar(UInt32(0x0001D54C))!)",
        "uopf"                            : "\(UnicodeScalar(UInt32(0x0001D566))!)",
        "uparrow"                         : "\(UnicodeScalar(UInt32(0x00002191))!)",
        "UpArrow"                         : "\(UnicodeScalar(UInt32(0x00002191))!)",
        "Uparrow"                         : "\(UnicodeScalar(UInt32(0x000021D1))!)",
        "UpArrowBar"                      : "\(UnicodeScalar(UInt32(0x00002912))!)",
        "UpArrowDownArrow"                : "\(UnicodeScalar(UInt32(0x000021C5))!)",
        "updownarrow"                     : "\(UnicodeScalar(UInt32(0x00002195))!)",
        "UpDownArrow"                     : "\(UnicodeScalar(UInt32(0x00002195))!)",
        "Updownarrow"                     : "\(UnicodeScalar(UInt32(0x000021D5))!)",
        "UpEquilibrium"                   : "\(UnicodeScalar(UInt32(0x0000296E))!)",
        "upharpoonleft"                   : "\(UnicodeScalar(UInt32(0x000021BF))!)",
        "upharpoonright"                  : "\(UnicodeScalar(UInt32(0x000021BE))!)",
        "uplus"                           : "\(UnicodeScalar(UInt32(0x0000228E))!)",
        "UpperLeftArrow"                  : "\(UnicodeScalar(UInt32(0x00002196))!)",
        "UpperRightArrow"                 : "\(UnicodeScalar(UInt32(0x00002197))!)",
        "upsi"                            : "\(UnicodeScalar(UInt32(0x000003C5))!)",
        "Upsi"                            : "\(UnicodeScalar(UInt32(0x000003D2))!)",
        "upsih"                           : "\(UnicodeScalar(UInt32(0x000003D2))!)",
        "Upsilon"                         : "\(UnicodeScalar(UInt32(0x000003A5))!)",
        "upsilon"                         : "\(UnicodeScalar(UInt32(0x000003C5))!)",
        "UpTee"                           : "\(UnicodeScalar(UInt32(0x000022A5))!)",
        "UpTeeArrow"                      : "\(UnicodeScalar(UInt32(0x000021A5))!)",
        "upuparrows"                      : "\(UnicodeScalar(UInt32(0x000021C8))!)",
        "urcorn"                          : "\(UnicodeScalar(UInt32(0x0000231D))!)",
        "urcorner"                        : "\(UnicodeScalar(UInt32(0x0000231D))!)",
        "urcrop"                          : "\(UnicodeScalar(UInt32(0x0000230E))!)",
        "Uring"                           : "\(UnicodeScalar(UInt32(0x0000016E))!)",
        "uring"                           : "\(UnicodeScalar(UInt32(0x0000016F))!)",
        "urtri"                           : "\(UnicodeScalar(UInt32(0x000025F9))!)",
        "Uscr"                            : "\(UnicodeScalar(UInt32(0x0001D4B0))!)",
        "uscr"                            : "\(UnicodeScalar(UInt32(0x0001D4CA))!)",
        "utdot"                           : "\(UnicodeScalar(UInt32(0x000022F0))!)",
        "Utilde"                          : "\(UnicodeScalar(UInt32(0x00000168))!)",
        "utilde"                          : "\(UnicodeScalar(UInt32(0x00000169))!)",
        "utri"                            : "\(UnicodeScalar(UInt32(0x000025B5))!)",
        "utrif"                           : "\(UnicodeScalar(UInt32(0x000025B4))!)",
        "uuarr"                           : "\(UnicodeScalar(UInt32(0x000021C8))!)",
        "Uuml"                            : "\(UnicodeScalar(UInt32(0x000000DC))!)",
        "uuml"                            : "\(UnicodeScalar(UInt32(0x000000FC))!)",
        "uwangle"                         : "\(UnicodeScalar(UInt32(0x000029A7))!)",
        "vangrt"                          : "\(UnicodeScalar(UInt32(0x0000299C))!)",
        "varepsilon"                      : "\(UnicodeScalar(UInt32(0x000003F5))!)",
        "varkappa"                        : "\(UnicodeScalar(UInt32(0x000003F0))!)",
        "varnothing"                      : "\(UnicodeScalar(UInt32(0x00002205))!)",
        "varphi"                          : "\(UnicodeScalar(UInt32(0x000003D5))!)",
        "varpi"                           : "\(UnicodeScalar(UInt32(0x000003D6))!)",
        "varpropto"                       : "\(UnicodeScalar(UInt32(0x0000221D))!)",
        "varr"                            : "\(UnicodeScalar(UInt32(0x00002195))!)",
        "vArr"                            : "\(UnicodeScalar(UInt32(0x000021D5))!)",
        "varrho"                          : "\(UnicodeScalar(UInt32(0x000003F1))!)",
        "varsigma"                        : "\(UnicodeScalar(UInt32(0x000003C2))!)",
        "varsubsetneq"                    : "\(UnicodeScalar(UInt32(0x0000228A))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "varsubsetneqq"                   : "\(UnicodeScalar(UInt32(0x00002ACB))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "varsupsetneq"                    : "\(UnicodeScalar(UInt32(0x0000228B))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "varsupsetneqq"                   : "\(UnicodeScalar(UInt32(0x00002ACC))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "vartheta"                        : "\(UnicodeScalar(UInt32(0x000003D1))!)",
        "vartriangleleft"                 : "\(UnicodeScalar(UInt32(0x000022B2))!)",
        "vartriangleright"                : "\(UnicodeScalar(UInt32(0x000022B3))!)",
        "vBar"                            : "\(UnicodeScalar(UInt32(0x00002AE8))!)",
        "Vbar"                            : "\(UnicodeScalar(UInt32(0x00002AEB))!)",
        "vBarv"                           : "\(UnicodeScalar(UInt32(0x00002AE9))!)",
        "Vcy"                             : "\(UnicodeScalar(UInt32(0x00000412))!)",
        "vcy"                             : "\(UnicodeScalar(UInt32(0x00000432))!)",
        "vdash"                           : "\(UnicodeScalar(UInt32(0x000022A2))!)",
        "vDash"                           : "\(UnicodeScalar(UInt32(0x000022A8))!)",
        "Vdash"                           : "\(UnicodeScalar(UInt32(0x000022A9))!)",
        "VDash"                           : "\(UnicodeScalar(UInt32(0x000022AB))!)",
        "Vdashl"                          : "\(UnicodeScalar(UInt32(0x00002AE6))!)",
        "vee"                             : "\(UnicodeScalar(UInt32(0x00002228))!)",
        "Vee"                             : "\(UnicodeScalar(UInt32(0x000022C1))!)",
        "veebar"                          : "\(UnicodeScalar(UInt32(0x000022BB))!)",
        "veeeq"                           : "\(UnicodeScalar(UInt32(0x0000225A))!)",
        "vellip"                          : "\(UnicodeScalar(UInt32(0x000022EE))!)",
        "verbar"                          : "\(UnicodeScalar(UInt32(0x0000007C))!)",
        "Verbar"                          : "\(UnicodeScalar(UInt32(0x00002016))!)",
        "vert"                            : "\(UnicodeScalar(UInt32(0x0000007C))!)",
        "Vert"                            : "\(UnicodeScalar(UInt32(0x00002016))!)",
        "VerticalBar"                     : "\(UnicodeScalar(UInt32(0x00002223))!)",
        "VerticalLine"                    : "\(UnicodeScalar(UInt32(0x0000007C))!)",
        "VerticalSeparator"               : "\(UnicodeScalar(UInt32(0x00002758))!)",
        "VerticalTilde"                   : "\(UnicodeScalar(UInt32(0x00002240))!)",
        "VeryThinSpace"                   : "\(UnicodeScalar(UInt32(0x0000200A))!)",
        "Vfr"                             : "\(UnicodeScalar(UInt32(0x0001D519))!)",
        "vfr"                             : "\(UnicodeScalar(UInt32(0x0001D533))!)",
        "vltri"                           : "\(UnicodeScalar(UInt32(0x000022B2))!)",
        "vnsub"                           : "\(UnicodeScalar(UInt32(0x00002282))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "vnsup"                           : "\(UnicodeScalar(UInt32(0x00002283))!)\(UnicodeScalar(UInt32(0x000020D2))!)",
        "Vopf"                            : "\(UnicodeScalar(UInt32(0x0001D54D))!)",
        "vopf"                            : "\(UnicodeScalar(UInt32(0x0001D567))!)",
        "vprop"                           : "\(UnicodeScalar(UInt32(0x0000221D))!)",
        "vrtri"                           : "\(UnicodeScalar(UInt32(0x000022B3))!)",
        "Vscr"                            : "\(UnicodeScalar(UInt32(0x0001D4B1))!)",
        "vscr"                            : "\(UnicodeScalar(UInt32(0x0001D4CB))!)",
        "vsubne"                          : "\(UnicodeScalar(UInt32(0x0000228A))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "vsubnE"                          : "\(UnicodeScalar(UInt32(0x00002ACB))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "vsupne"                          : "\(UnicodeScalar(UInt32(0x0000228B))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "vsupnE"                          : "\(UnicodeScalar(UInt32(0x00002ACC))!)\(UnicodeScalar(UInt32(0x0000FE00))!)",
        "Vvdash"                          : "\(UnicodeScalar(UInt32(0x000022AA))!)",
        "vzigzag"                         : "\(UnicodeScalar(UInt32(0x0000299A))!)",
        "Wcirc"                           : "\(UnicodeScalar(UInt32(0x00000174))!)",
        "wcirc"                           : "\(UnicodeScalar(UInt32(0x00000175))!)",
        "wedbar"                          : "\(UnicodeScalar(UInt32(0x00002A5F))!)",
        "wedge"                           : "\(UnicodeScalar(UInt32(0x00002227))!)",
        "Wedge"                           : "\(UnicodeScalar(UInt32(0x000022C0))!)",
        "wedgeq"                          : "\(UnicodeScalar(UInt32(0x00002259))!)",
        "weierp"                          : "\(UnicodeScalar(UInt32(0x00002118))!)",
        "Wfr"                             : "\(UnicodeScalar(UInt32(0x0001D51A))!)",
        "wfr"                             : "\(UnicodeScalar(UInt32(0x0001D534))!)",
        "Wopf"                            : "\(UnicodeScalar(UInt32(0x0001D54E))!)",
        "wopf"                            : "\(UnicodeScalar(UInt32(0x0001D568))!)",
        "wp"                              : "\(UnicodeScalar(UInt32(0x00002118))!)",
        "wr"                              : "\(UnicodeScalar(UInt32(0x00002240))!)",
        "wreath"                          : "\(UnicodeScalar(UInt32(0x00002240))!)",
        "Wscr"                            : "\(UnicodeScalar(UInt32(0x0001D4B2))!)",
        "wscr"                            : "\(UnicodeScalar(UInt32(0x0001D4CC))!)",
        "xcap"                            : "\(UnicodeScalar(UInt32(0x000022C2))!)",
        "xcirc"                           : "\(UnicodeScalar(UInt32(0x000025EF))!)",
        "xcup"                            : "\(UnicodeScalar(UInt32(0x000022C3))!)",
        "xdtri"                           : "\(UnicodeScalar(UInt32(0x000025BD))!)",
        "Xfr"                             : "\(UnicodeScalar(UInt32(0x0001D51B))!)",
        "xfr"                             : "\(UnicodeScalar(UInt32(0x0001D535))!)",
        "xharr"                           : "\(UnicodeScalar(UInt32(0x000027F7))!)",
        "xhArr"                           : "\(UnicodeScalar(UInt32(0x000027FA))!)",
        "Xi"                              : "\(UnicodeScalar(UInt32(0x0000039E))!)",
        "xi"                              : "\(UnicodeScalar(UInt32(0x000003BE))!)",
        "xlarr"                           : "\(UnicodeScalar(UInt32(0x000027F5))!)",
        "xlArr"                           : "\(UnicodeScalar(UInt32(0x000027F8))!)",
        "xmap"                            : "\(UnicodeScalar(UInt32(0x000027FC))!)",
        "xnis"                            : "\(UnicodeScalar(UInt32(0x000022FB))!)",
        "xodot"                           : "\(UnicodeScalar(UInt32(0x00002A00))!)",
        "Xopf"                            : "\(UnicodeScalar(UInt32(0x0001D54F))!)",
        "xopf"                            : "\(UnicodeScalar(UInt32(0x0001D569))!)",
        "xoplus"                          : "\(UnicodeScalar(UInt32(0x00002A01))!)",
        "xotime"                          : "\(UnicodeScalar(UInt32(0x00002A02))!)",
        "xrarr"                           : "\(UnicodeScalar(UInt32(0x000027F6))!)",
        "xrArr"                           : "\(UnicodeScalar(UInt32(0x000027F9))!)",
        "Xscr"                            : "\(UnicodeScalar(UInt32(0x0001D4B3))!)",
        "xscr"                            : "\(UnicodeScalar(UInt32(0x0001D4CD))!)",
        "xsqcup"                          : "\(UnicodeScalar(UInt32(0x00002A06))!)",
        "xuplus"                          : "\(UnicodeScalar(UInt32(0x00002A04))!)",
        "xutri"                           : "\(UnicodeScalar(UInt32(0x000025B3))!)",
        "xvee"                            : "\(UnicodeScalar(UInt32(0x000022C1))!)",
        "xwedge"                          : "\(UnicodeScalar(UInt32(0x000022C0))!)",
        "Yacute"                          : "\(UnicodeScalar(UInt32(0x000000DD))!)",
        "yacute"                          : "\(UnicodeScalar(UInt32(0x000000FD))!)",
        "YAcy"                            : "\(UnicodeScalar(UInt32(0x0000042F))!)",
        "yacy"                            : "\(UnicodeScalar(UInt32(0x0000044F))!)",
        "Ycirc"                           : "\(UnicodeScalar(UInt32(0x00000176))!)",
        "ycirc"                           : "\(UnicodeScalar(UInt32(0x00000177))!)",
        "Ycy"                             : "\(UnicodeScalar(UInt32(0x0000042B))!)",
        "ycy"                             : "\(UnicodeScalar(UInt32(0x0000044B))!)",
        "yen"                             : "\(UnicodeScalar(UInt32(0x000000A5))!)",
        "Yfr"                             : "\(UnicodeScalar(UInt32(0x0001D51C))!)",
        "yfr"                             : "\(UnicodeScalar(UInt32(0x0001D536))!)",
        "YIcy"                            : "\(UnicodeScalar(UInt32(0x00000407))!)",
        "yicy"                            : "\(UnicodeScalar(UInt32(0x00000457))!)",
        "Yopf"                            : "\(UnicodeScalar(UInt32(0x0001D550))!)",
        "yopf"                            : "\(UnicodeScalar(UInt32(0x0001D56A))!)",
        "Yscr"                            : "\(UnicodeScalar(UInt32(0x0001D4B4))!)",
        "yscr"                            : "\(UnicodeScalar(UInt32(0x0001D4CE))!)",
        "YUcy"                            : "\(UnicodeScalar(UInt32(0x0000042E))!)",
        "yucy"                            : "\(UnicodeScalar(UInt32(0x0000044E))!)",
        "yuml"                            : "\(UnicodeScalar(UInt32(0x000000FF))!)",
        "Yuml"                            : "\(UnicodeScalar(UInt32(0x00000178))!)",
        "Zacute"                          : "\(UnicodeScalar(UInt32(0x00000179))!)",
        "zacute"                          : "\(UnicodeScalar(UInt32(0x0000017A))!)",
        "Zcaron"                          : "\(UnicodeScalar(UInt32(0x0000017D))!)",
        "zcaron"                          : "\(UnicodeScalar(UInt32(0x0000017E))!)",
        "Zcy"                             : "\(UnicodeScalar(UInt32(0x00000417))!)",
        "zcy"                             : "\(UnicodeScalar(UInt32(0x00000437))!)",
        "Zdot"                            : "\(UnicodeScalar(UInt32(0x0000017B))!)",
        "zdot"                            : "\(UnicodeScalar(UInt32(0x0000017C))!)",
        "zeetrf"                          : "\(UnicodeScalar(UInt32(0x00002128))!)",
        "ZeroWidthSpace"                  : "\(UnicodeScalar(UInt32(0x0000200B))!)",
        "Zeta"                            : "\(UnicodeScalar(UInt32(0x00000396))!)",
        "zeta"                            : "\(UnicodeScalar(UInt32(0x000003B6))!)",
        "Zfr"                             : "\(UnicodeScalar(UInt32(0x00002128))!)",
        "zfr"                             : "\(UnicodeScalar(UInt32(0x0001D537))!)",
        "ZHcy"                            : "\(UnicodeScalar(UInt32(0x00000416))!)",
        "zhcy"                            : "\(UnicodeScalar(UInt32(0x00000436))!)",
        "zigrarr"                         : "\(UnicodeScalar(UInt32(0x000021DD))!)",
        "Zopf"                            : "\(UnicodeScalar(UInt32(0x00002124))!)",
        "zopf"                            : "\(UnicodeScalar(UInt32(0x0001D56B))!)",
        "Zscr"                            : "\(UnicodeScalar(UInt32(0x0001D4B5))!)",
        "zscr"                            : "\(UnicodeScalar(UInt32(0x0001D4CF))!)",
        "zwj"                             : "\(UnicodeScalar(UInt32(0x0000200D))!)",
        "zwnj"                            : "\(UnicodeScalar(UInt32(0x0000200C))!)",
    ]
}
